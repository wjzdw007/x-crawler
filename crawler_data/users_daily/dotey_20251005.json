{
  "user": {
    "screen_name": "dotey",
    "name": "",
    "description": "",
    "followers_count": 0,
    "verified": false,
    "is_blue_verified": false
  },
  "date": "20251005",
  "last_updated": "2025-10-18T01:37:33.419605",
  "tweet_count": 21,
  "tweets": [
    {
      "id": "1974636732021608748",
      "text": "如何编写 prompt 才能让大模型更好地理解工具？\n\n这个问题的答案很简单：让模型来写 Prompt，让模型给你反馈。\n\n举个案例，我上个帖子说到帮朋友做一个他们设计系统的 Coding Agent，初始提示词的产生是这样的：\n\n1. 先让 Claude Code，去基于设计系统（Design System）做一个 Login 页面，要求只能用设计系统的组件，要求搜索、阅读设计系统的文档去了解怎么使用这个设计系统。\n\n2. 当 Claude Code 完成这个任务后，实际上它已经收集够了基于这套设计系统完成一个登录页面所需要的所有信息，然后基于当前会话当前上下文，让 Claude Code 为一个 Coding Agent 写一个 System Prompt，让这个 Coding Agent 也能像它一样：\n- high level 的了解这套设计系统\n- 知道去什么地方检索文档\n- 常用的组件有哪些\n- 最佳实践是什么\n- 等等\n\n3. 将 Claude Code 生成的 System Prompt 去测试，看差距在哪，然后回到之前 Claude Code 的会话，告诉它之前的 Prompt 存在的问题，让它优化，这样迭代几个版本就没问题了。\n\n这就好比你先请一个开发高手来做一个项目，项目做完了，你让他们把文档写下来，写成说明书，其他人也能参考这个说明书像他们一样做好这个项目。",
      "created_at": "Sun Oct 05 00:44:18 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1974632521720868949",
        "text": "@dotey 说得非常好！👏 对于第 4 点我有个问题：如何编写 prompt 才能让大模型更好地理解工具？ 有没有推荐的教程或example可以参考？另外，对于第 2 点我觉得实现起来会比较困难，对成熟系统来说，这一步恐怕只能作为最后阶段的优化",
        "created_at": "Sun Oct 05 00:27:34 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1452323105469259787",
          "name": "okcomputer",
          "screen_name": "thatcoolwall",
          "description": "",
          "followers_count": 549,
          "friends_count": 2417,
          "verified": false,
          "is_blue_verified": false
        },
        "stats": {
          "retweet_count": 0,
          "favorite_count": 1,
          "reply_count": 0,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 84,
        "favorite_count": 362,
        "reply_count": 11,
        "quote_count": 9
      }
    },
    {
      "id": "1974642132842627446",
      "text": "RT @QusetionHub: 我越来越发现，文字和视频的表达方式是不同的。\n\n1.文字更侧重于内容压缩。\n\nX就是一个经典的文字平台，放到国内就是微博。\n\n写文字平台最重要的就是语言精炼，用最少的字最浅的话讲最深的道理。\n\n要求一句话直击人心。\n\n2.视频更侧重于口语化表达…",
      "created_at": "Sun Oct 05 01:05:46 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1974281591376814327",
        "text": "我越来越发现，文字和视频的表达方式是不同的。\n\n1.文字更侧重于内容压缩。\n\nX就是一个经典的文字平台，放到国内就是微博。\n\n写文字平台最重要的就是语言精炼，用最少的字最浅的话讲最深的道理。\n\n要求一句话直击人心。\n\n2.视频更侧重于口语化表达。\n\n抖音就是一个经典的视频平台。\n\n拍视频最重要的不要“拍视频”，不要有距离感。\n\n用朋友的聊天把你的思路与之分享。\n\n要求足够有“亲近感”。\n\n所以文字平台的文字是不能直接照搬到视频平台的：\n\n-人们说话习惯不会那么书面，听着别扭。\n-文字是高度概括，细节不足，需要自行脑补，口述会有些莫名其妙。\n\n所以文字转视频，需要：\n\n-补充细节，最好有真人真事真情实感。\n-语气不要说教，你不会想靠近喜欢说教的朋友。\n-语言表达真实，符合你的语言习惯。\n\n这里有个问题，对标不符合你的语言习惯怎么办？\n\n那就把你的习惯强制改成对标的习惯。\n\n会变通是基本功。",
        "created_at": "Sat Oct 04 01:13:06 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1914978318795079680",
          "name": "凉光一现",
          "screen_name": "QusetionHub",
          "description": "✨intj to enfj｜💭创业＆认知｜💦沪漂｜💫在职教学主管｜💻独立开发学习ing｜💡抖音https://t.co/C97vVvxekO",
          "followers_count": 1085,
          "friends_count": 225,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 19,
          "favorite_count": 87,
          "reply_count": 10,
          "quote_count": 3
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 19,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1974656670950449465",
      "text": "还得看制作的水平，如果有创意的内容，还是值得看看的\n视频来源：视频号（AI红发魔女） https://t.co/HEQhBl6f3s",
      "created_at": "Sun Oct 05 02:03:32 +0000 2025",
      "lang": "zh",
      "media": [
        {
          "type": "video",
          "id": "1974656452632489984",
          "url": "https://video.twimg.com/amplify_video/1974656452632489984/vid/avc1/704x1280/KqPnFFVAC72-eh2f.mp4?tag=21",
          "bitrate": 2176000
        }
      ],
      "retweet": null,
      "quoted": {
        "id": "1974373623998960077",
        "text": "我不喜欢看 sora 2 生成的AI视频，再精致也会觉得肤浅和生理不适。\n\n我更喜欢看河北小璐在农村搭台子唱香水有毒，那么粗糙但又那么自信，甚至让人感动。",
        "created_at": "Sat Oct 04 07:18:48 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1477948736156454913",
          "name": "马东锡 NLP",
          "screen_name": "dongxi_nlp",
          "description": "Prev. PhD @Stockholm_Uni | Alumni @KTHuniversity @uppsalauni Sharing insights on AI, autonomous agents, and large language & reasoning models",
          "followers_count": 29970,
          "friends_count": 806,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 6,
          "favorite_count": 105,
          "reply_count": 23,
          "quote_count": 4
        }
      },
      "stats": {
        "retweet_count": 71,
        "favorite_count": 447,
        "reply_count": 35,
        "quote_count": 8
      }
    },
    {
      "id": "1974663862814183848",
      "text": "最近大量使用 Codex 修 Bug 的一点经验分享，不需要复杂的提示词结构，重点是要给到正确的反馈：\n\n1. 通过截图或者错误日志告诉它 Bug 如何重现、现象是什么\n\n2. 如果它不能修复，让它在关键路径打印日志，然后每次把日志和操作步骤发给它\n\n3. 如果你能自己缩小范围，知道相关代码在哪几个文件，告诉它能极大提高成功率\n\n4. 让它自己去用工具收集反馈，比如告诉它怎么运行相关文件的自动化测试，或者告诉它怎么用 PlayWright/Chrome Dev Tool 抓屏\n\n5. 给它提供参考代码，比如某个能正常运行开源项目的源码（需要下载到本地），让它对照着分析下，也许能找到原因",
      "created_at": "Sun Oct 05 02:32:07 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1974606131575341075",
        "text": "codex 中输入 /status 就能看状态， pro 用户的 Token 用量也是有限制的，但正常还是不容易达到的，我最近一周使用强度蛮高，只用 GPT-5-Codex high，半周也才 26% https://t.co/etcJvMkkA0",
        "created_at": "Sat Oct 04 22:42:42 +0000 2025",
        "lang": "zh",
        "media": [
          {
            "type": "photo",
            "id": "1974605368790577152",
            "url": "https://pbs.twimg.com/media/G2c1HvpXcAAOBt8.jpg"
          }
        ],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "3178231",
          "name": "宝玉",
          "screen_name": "dotey",
          "description": "Prompt Engineer, dedicated to learning and disseminating knowledge about AI, software engineering, and engineering management.",
          "followers_count": 137079,
          "friends_count": 1423,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 2,
          "favorite_count": 55,
          "reply_count": 11,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 24,
        "favorite_count": 178,
        "reply_count": 11,
        "quote_count": 3
      }
    },
    {
      "id": "1974665109588033964",
      "text": "6. 新开会话切换模型\n有时候不行换个模型试试，说不定换个模型就好了，比如 Codex 不用 Claude Code，GPT-5-Codex media 不行就是试试 high 或者 GPT-5 high。\n有时候上下文太长了新开会话会好很多。",
      "created_at": "Sun Oct 05 02:37:04 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": null,
      "stats": {
        "retweet_count": 1,
        "favorite_count": 4,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1974665530503315732",
      "text": "我推荐 claude agent sdk 是因为它内置了 Claude Code 用的所有工具，基本上可以完成绝大部分普通 Agent 的事情，只需要根据写新的提示词或者增加少量工具即可完成一个原型\n\nhttps://t.co/SENNoSTFWO",
      "created_at": "Sun Oct 05 02:38:44 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1974664964557443229",
        "text": "@dotey 我用 Agent 的场景是没有涉及命令行工具，这一块的支持还未上手使用过。不过 ADK 支持对接 Langchain 生态的现成 tools，粗看了一下有个 Shell (bash) tool：https://t.co/2Q9puVBHOu",
        "created_at": "Sun Oct 05 02:36:29 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "5382142",
          "name": "Oasis Feng",
          "screen_name": "oasisfeng",
          "description": "Ancient Geeeek, Life Hacker, Indie Developer, Economics Rookie",
          "followers_count": 25729,
          "friends_count": 183,
          "verified": false,
          "is_blue_verified": false
        },
        "stats": {
          "retweet_count": 0,
          "favorite_count": 1,
          "reply_count": 0,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 1,
        "favorite_count": 2,
        "reply_count": 1,
        "quote_count": 0
      }
    },
    {
      "id": "1974665641153253887",
      "text": "这是为 Agent 写提示词的方法\nhttps://t.co/VAxZVJVAdg",
      "created_at": "Sun Oct 05 02:39:11 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1974636732021608748",
        "text": "如何编写 prompt 才能让大模型更好地理解工具？\n\n这个问题的答案很简单：让模型来写 Prompt，让模型给你反馈。\n\n举个案例，我上个帖子说到帮朋友做一个他们设计系统的 Coding Agent，初始提示词的产生是这样的：\n\n1. 先让 Claude Code，去基于设计系统（Design System）做一个 Login 页面，要求只能用设计系统的组件，要求搜索、阅读设计系统的文档去了解怎么使用这个设计系统。\n\n2. 当 Claude Code 完成这个任务后，实际上它已经收集够了基于这套设计系统完成一个登录页面所需要的所有信息，然后基于当前会话当前上下文，让 Claude Code 为一个 Coding Agent 写一个 System Prompt，让这个 Coding Agent 也能像它一样：\n- high level 的了解这套设计系统\n- 知道去什么地方检索文档\n- 常用的组件有哪些\n- 最佳实践是什么\n- 等等\n\n3. 将 Claude Code 生成的 System Prompt 去测试，看差距在哪，然后回到之前 Claude Code 的会话，告诉它之前的 Prompt 存在的问题，让它优化，这样迭代几个版本就没问题了。\n\n这就好比你先请一个开发高手来做一个项目，项目做完了，你让他们把文档写下来，写成说明书，其他人也能参考这个说明书像他们一样做好这个项目。",
        "created_at": "Sun Oct 05 00:44:18 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "3178231",
          "name": "宝玉",
          "screen_name": "dotey",
          "description": "Prompt Engineer, dedicated to learning and disseminating knowledge about AI, software engineering, and engineering management.",
          "followers_count": 137079,
          "friends_count": 1423,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 84,
          "favorite_count": 362,
          "reply_count": 11,
          "quote_count": 9
        }
      },
      "stats": {
        "retweet_count": 0,
        "favorite_count": 1,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1974665826692403484",
      "text": "Claude Agent SDK 推荐\nhttps://t.co/fNNjmTPNEZ",
      "created_at": "Sun Oct 05 02:39:55 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1973937260220330005",
        "text": "如果你想开发一个 Agent，无论你是打算做 CLI 还是做 Web 还是 Windows，都可以考虑使用 Claude Agent SDK，和 Claude Code 共享的底层代码，Claude Code 就是基于它之上加了个 CLI 的 UI，也就是说你完全可以基于它写一个 Claude Code 出来。\n\n我昨天帮朋友花了几个小时就实现了个简单的 Agent，实现了输入提示词，就可以基于某个没训练的 Design System 写一套 UI 出来。\n\n他写的这个 Agent 原理很简单，就是把这套设计系统的所有 Markdown 文档（几百个）放到一个它可以访问的目录，然后在 Systme Prompt 里面引导它去检索这个文档目录。\n\n当用户输入提示词或者 Screenshot 要做一个 UI，Agent 就根据提示词规划可能要用到的组件，然后用 SDK 自带的 GREP 工具去检索文档库找到这些组件的 API，最后基于收集到的信息用这个 Design System 组件生成页面。\n\n这个 SDK API 很简单，但很强大，你不止是可以用它内置的工具（Task、Grep、WebFetch 等等），你还可以添加自己的工具，还可以用 MCP。并且它可以把整个交互的结果通过 API 让你可以获取到原始的请求和返回消息，这样你可以自己实现一套比 CLI 更好用的交互 UI。\n\n当然这个局限也有：\n1. 只能用 Claude 模型兼容的 API，如果你想用 GPT-5 之类模型，估计效果不会太好\n2. 只支持 Python 和 TypeScript\n3. Tokens 消耗飞快\n\n如果你只是做前期的 POC，强烈建议你试试。",
        "created_at": "Fri Oct 03 02:24:51 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "3178231",
          "name": "宝玉",
          "screen_name": "dotey",
          "description": "Prompt Engineer, dedicated to learning and disseminating knowledge about AI, software engineering, and engineering management.",
          "followers_count": 137079,
          "friends_count": 1423,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 105,
          "favorite_count": 605,
          "reply_count": 31,
          "quote_count": 20
        }
      },
      "stats": {
        "retweet_count": 0,
        "favorite_count": 6,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1974680097740525885",
      "text": "RT @YanyuRensheng: 设计一个AI更易理解的工具，优先级是工具定义本身、系统指令、用户提示词。如果工具定义得当，几乎不需要后两者提及具体工具，除非多个工具的用途有比较明显的重叠。…",
      "created_at": "Sun Oct 05 03:36:37 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1974679452543336912",
        "text": "设计一个AI更易理解的工具，优先级是工具定义本身、系统指令、用户提示词。如果工具定义得当，几乎不需要后两者提及具体工具，除非多个工具的用途有比较明显的重叠。\n\n工具名称和描述最重要，名称最好是人类一看就知道它是干什么的，比如getWeather。描述中可以提及一些使用条件，但要非常明确不要有歧义。\n\n参数尽可能少，尽量为参数提供枚举项、设定上下限。名称最好是一看就懂，否则就在描述中加以说明\n\n除非必要，尽量不要使用嵌套层级过多的结构化参数，否则响应速度会非常慢。可以考虑拆解成多个工具。\n\n使用MCP，如果工具不易读懂，最好是换一个，通过系统指令或者用户提示词对工具进行说明，往往效果一般，还会引入歧义。",
        "created_at": "Sun Oct 05 03:34:03 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": {
          "id": "1974636732021608748",
          "text": "如何编写 prompt 才能让大模型更好地理解工具？\n\n这个问题的答案很简单：让模型来写 Prompt，让模型给你反馈。\n\n举个案例，我上个帖子说到帮朋友做一个他们设计系统的 Coding Agent，初始提示词的产生是这样的：\n\n1. 先让 Claude Code，去基于设计系统（Design System）做一个 Login 页面，要求只能用设计系统的组件，要求搜索、阅读设计系统的文档去了解怎么使用这个设计系统。\n\n2. 当 Claude Code 完成这个任务后，实际上它已经收集够了基于这套设计系统完成一个登录页面所需要的所有信息，然后基于当前会话当前上下文，让 Claude Code 为一个 Coding Agent 写一个 System Prompt，让这个 Coding Agent 也能像它一样：\n- high level 的了解这套设计系统\n- 知道去什么地方检索文档\n- 常用的组件有哪些\n- 最佳实践是什么\n- 等等\n\n3. 将 Claude Code 生成的 System Prompt 去测试，看差距在哪，然后回到之前 Claude Code 的会话，告诉它之前的 Prompt 存在的问题，让它优化，这样迭代几个版本就没问题了。\n\n这就好比你先请一个开发高手来做一个项目，项目做完了，你让他们把文档写下来，写成说明书，其他人也能参考这个说明书像他们一样做好这个项目。",
          "created_at": "Sun Oct 05 00:44:18 +0000 2025",
          "lang": "zh",
          "media": [],
          "retweet": null,
          "quoted": null,
          "user": {
            "id": "3178231",
            "name": "宝玉",
            "screen_name": "dotey",
            "description": "Prompt Engineer, dedicated to learning and disseminating knowledge about AI, software engineering, and engineering management.",
            "followers_count": 137079,
            "friends_count": 1423,
            "verified": false,
            "is_blue_verified": true
          },
          "stats": {
            "retweet_count": 84,
            "favorite_count": 362,
            "reply_count": 11,
            "quote_count": 9
          }
        },
        "user": {
          "id": "52014015",
          "name": "S Li",
          "screen_name": "YanyuRensheng",
          "description": "@aivron_ai 多模型接入、团队记忆、共享上下文",
          "followers_count": 1392,
          "friends_count": 1201,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 3,
          "favorite_count": 13,
          "reply_count": 1,
          "quote_count": 0
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 3,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1974709860035166630",
      "text": "我觉得 AI Sense 就是：知道什么任务 AI 能做，哪个模型、工具最合适，该怎么做，是写提示词还是做 Agent……\n\n培养 AI Sense 方式就是多用。",
      "created_at": "Sun Oct 05 05:34:53 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1974663248537678076",
        "text": "以前叫网感，现在叫：AI Sense \n\n如何培养 AI Sense ？\n\n不写一行代码，不写一个文档，完全使用 AI 帮你完成一个项目或者工作，并赚到钱。",
        "created_at": "Sun Oct 05 02:29:40 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1452169962286637059",
          "name": "DinoDeer",
          "screen_name": "xDinoDeer",
          "description": "古典互联网从业者，广告爱好者，接地气的生意人。 Less code more money.",
          "followers_count": 22514,
          "friends_count": 1093,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 11,
          "favorite_count": 100,
          "reply_count": 8,
          "quote_count": 4
        }
      },
      "stats": {
        "retweet_count": 12,
        "favorite_count": 83,
        "reply_count": 8,
        "quote_count": 3
      }
    },
    {
      "id": "1974727179851427875",
      "text": "中学老师用 AI 出题，结果用的古诗还是 AI 编的😅 https://t.co/qLDcWTBdLo",
      "created_at": "Sun Oct 05 06:43:42 +0000 2025",
      "lang": "zh",
      "media": [
        {
          "type": "photo",
          "id": "1974726721782919168",
          "url": "https://pbs.twimg.com/media/G2ejfaxXsAA239C.jpg"
        },
        {
          "type": "photo",
          "id": "1974726802623909888",
          "url": "https://pbs.twimg.com/media/G2ejkH7XUAAnRQp.jpg"
        },
        {
          "type": "photo",
          "id": "1974726874463965184",
          "url": "https://pbs.twimg.com/media/G2ejoTjXkAAGeeA.jpg"
        },
        {
          "type": "photo",
          "id": "1974726925076602880",
          "url": "https://pbs.twimg.com/media/G2ejrQGXIAAZ0qH.jpg"
        }
      ],
      "retweet": null,
      "quoted": null,
      "stats": {
        "retweet_count": 13,
        "favorite_count": 86,
        "reply_count": 20,
        "quote_count": 1
      }
    },
    {
      "id": "1974846448165683668",
      "text": "RT @yan5xu: @dotey 有些讹传在里面了，我来澄清一下：\n首先，num=100 是 Google 网页搜索 URL 的一个参数，用于控制单页返回结果数量，于9月中旬已全面失效。Google 本身不提供公开的网页搜索API。GCP平台上的 Custom Search…",
      "created_at": "Sun Oct 05 14:37:38 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1974831196598366259",
        "text": "有些讹传在里面了，我来澄清一下：\n首先，num=100 是 Google 网页搜索 URL 的一个参数，用于控制单页返回结果数量，于9月中旬已全面失效。Google 本身不提供公开的网页搜索API。GCP平台上的 Custom Search API 是谷歌官方的另一个服务，其返回内容和排序与 https://t.co/D0jftDokmh 主站搜索并不一致。\n第二，主流 Chatbot/Agent（包括 ChatGPT、Claude 等）获取实时信息，使用的是 Bing、Brave 等提供的第一方搜索API。\n第三，市面上所谓的“Google Search API”，本质是 SERP (搜索引擎结果页) 服务，通过模拟浏览器抓取实现。这些第三方API主要被一些小型Agent或SEO工具使用。\n第四，Reddit 股价下跌，直接原因是用户活跃度数据不佳与 ChatGPT 对其内容引用比例下跌。前者影响广告收入预期，后者则打击了其作为AI训练数据源的核心价值。num 参数失效并不能直接导致后者，但它通过重创第三方数据抓取生态，间接动摇了市场对Reddit“长尾”数据价值的信心。\n第五，这个事件还可以和 Grokipedia 联系在一起。它彻底暴露了当前AI生态依赖第三方数据源（如Reddit）和分发渠道（如Google/Bing）的脆弱性。马斯克的解法是垂直整合：用自有数据源（X）训练自有模型（Grok），来打造自有知识库（Grokipedia），试图从根本上掌握数据和信息定义权，不再受制于人。\n我们或许真的需要重新思考，什么是搜索引擎？以及，我们是否还需要一个 one-for-all 的搜索引擎？",
        "created_at": "Sun Oct 05 13:37:02 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "115897222",
          "name": "yan5xu",
          "screen_name": "yan5xu",
          "description": "🤖 AI 野生研究员 | ex @ManusAI_HQ & @hey_im_monica\n推特内容仅代表个人观点，和公司无关",
          "followers_count": 5881,
          "friends_count": 348,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 18,
          "favorite_count": 113,
          "reply_count": 4,
          "quote_count": 2
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 18,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1974858604726366404",
      "text": "用 AI 编程，其实很像做技术管理，一个 Engineering Manager 对项目的掌控能力体现在技术能力和对项目的参与度上。\n\n好的 EM，会深度参与项目的开发：\n\n1. 先要和产品经理搞清楚需求，到底这个项目是要实现什么功能，验收的标准是什么\n\n（和 AI 编程要先搞清楚需求）\n\n2. 然后会一起参与设计方案的讨论，不一定要太多去微管理，但是需要明白设计方案是什么，为什么选这套设计方案\n\n（要先设计在写代码，自己不设计让 AI 设计也没关系，但是要让 AI 写文档，不清楚的地方解释清楚为什么这么设计）\n\n3. 会协助分配任务，帮助把复杂任务拆分成合适的颗粒度，尤其是对新加入的团队成员，要让他们明白做的任务是什么，怎么和其他人做的任务协调\n\n（用 AI 开发任务得要协助拆分模块，把任务拆分到合适的颗粒度，而不是都让 AI 去做）\n\n4. 对质量要把关，会对团队写的代码进行 Code Review，指出存在的问题，要求有测试覆盖\n\n（对 AI 生成的代码也要进行 Review，不合理的地方得让 AI 重新实现，不理解的代码也要问清楚，要写自动化测试）\n\n5. 招聘/开除，招募新员工，开除能力不行的\n\n（了解市面上有哪些模型，不要死守着一个模型，及时换成好的模型）\n\n管 AI 比管人难，因为人有主动性，AI 得你一直推动\n\n管 AI 比管人容易，因为人心难测，要胡萝卜加大棒，但你不用考虑 AI 撂挑子不干活，不用考虑的心理承受能力，爱干干，不爱干有的是 AI 干",
      "created_at": "Sun Oct 05 15:25:57 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1974815830581145648",
        "text": "今天群友问了一个问题\n\n「codex 用的越多,感觉对项目的掌控能力就越差」 \n\n 我说, 你的问题其实是如何更好的提升中型项目的掌控力.  \n\n不过这是个好问题, 顺手问了 gpt pro , 大家可以看一下\n\n链接见评论区",
        "created_at": "Sun Oct 05 12:35:58 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "451425069",
          "name": "海拉鲁编程客",
          "screen_name": "hylarucoder",
          "description": "🖥️ Indie Maker\n🛠️ AI 能力边缘疯狂试探者\n📌 油管「海拉鲁编程客」\n 🌸 沦为程序员的段子手/猫咪",
          "followers_count": 18394,
          "friends_count": 1015,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 5,
          "favorite_count": 64,
          "reply_count": 5,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 27,
        "favorite_count": 166,
        "reply_count": 8,
        "quote_count": 2
      }
    },
    {
      "id": "1974868433465754020",
      "text": "1. 没有编程经验，稍微复杂一点的系统，最多只能用自然语言发布一个可以勉强跑通的原型，离发布生产的标准还是有点差距\n2. Codex 要有编程基础才能用好\n3. 如果你需要经常编程，那么有必要去学一些编程基础知识，就算水涨船高，这些知识也可以让你未来编程效率倍增，就像老板要懂点业务",
      "created_at": "Sun Oct 05 16:05:00 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1974860299946860752",
        "text": "宝玉老师，请教下，我没有编程经验，但已经尝试了下CODEX GPT5，发现按自己设想让它写一个中等复杂度的web系统，并没有达到预期效果，但很想知道，是1）自己方法错误，真的可以直接用自然语言就能完成一个系统的编码并发布。还是说2）codex其实还是离不开编程的基础才能用好。\n\n假如是2），是否有必要投入时间去看懂它的编码内容含义，还是说，等着水涨船高，下一代模型更新就可以了。",
        "created_at": "Sun Oct 05 15:32:41 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "2845956222",
          "name": "JW",
          "screen_name": "Jerry_Wu1984",
          "description": "",
          "followers_count": 10,
          "friends_count": 240,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 0,
          "favorite_count": 5,
          "reply_count": 4,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 17,
        "favorite_count": 141,
        "reply_count": 11,
        "quote_count": 0
      }
    },
    {
      "id": "1974869169494774246",
      "text": "你以为人对 AI 就没偏见吗？\n怕 AI 干不了活，又怕 AI 干完了自己的活😅",
      "created_at": "Sun Oct 05 16:07:55 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1974867972847202317",
        "text": "这么说的话，我似乎理解为什么很多管理者对只会有AI编程的年轻人带有偏见了。（今天看到一个帖子吐槽应届生）\n\n因为他们招进来的不是指哪打哪的牛马，而是与自己生态位重叠的竞争对手... https://t.co/FS6cErhP2N",
        "created_at": "Sun Oct 05 16:03:10 +0000 2025",
        "lang": "zh",
        "media": [
          {
            "type": "photo",
            "id": "1974867969546371072",
            "url": "https://pbs.twimg.com/media/G2gj9HsbwAAsDWm.png"
          }
        ],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1725169104963657728",
          "name": "阿兹特克小羊驼🦙",
          "screen_name": "AztecaAlpaca",
          "description": "热爱阅读，热衷原创与深度思考，致力于开放地观察一切，喜欢解构虚无的价值。聊技术、社会和八卦，偶尔幽默吐槽，探索知识的火花！\n\n⚽ AztecaAlpaca 🦙 \n🇨🇳👊🔥",
          "followers_count": 350,
          "friends_count": 423,
          "verified": false,
          "is_blue_verified": false
        },
        "stats": {
          "retweet_count": 0,
          "favorite_count": 11,
          "reply_count": 1,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 1,
        "favorite_count": 14,
        "reply_count": 3,
        "quote_count": 0
      }
    },
    {
      "id": "1974870190631641344",
      "text": "不是教育在倒退，是社会在进步，教育还没跟上而已。\n\n人的某些能力退化，另一些能力在进化一直是常态，我们小学还要学打算盘，现在这能力是完全退化了，但借助计算机，计算能力提升了不知道多少倍。\n\n思考和辨别能力一直是稀缺的，没有 AI 的时候就这样。",
      "created_at": "Sun Oct 05 16:11:59 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1974869004461502966",
        "text": "@dotey AI让很多人能力退化，失去了思考和辨别能力，是不是教育的倒退呢",
        "created_at": "Sun Oct 05 16:07:16 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1938803593576067072",
          "name": "Adam",
          "screen_name": "Adam38363368936",
          "description": "个人品牌︱AI提效︱搞钱，记录思考与成长\n挑战1000fo",
          "followers_count": 184,
          "friends_count": 287,
          "verified": false,
          "is_blue_verified": false
        },
        "stats": {
          "retweet_count": 0,
          "favorite_count": 1,
          "reply_count": 2,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 21,
        "favorite_count": 132,
        "reply_count": 16,
        "quote_count": 3
      }
    },
    {
      "id": "1974871638778007563",
      "text": "另外不要迷信任何号称不用学编程就可以用 AI 做好软件开发的所谓方法论或者课程 🤪",
      "created_at": "Sun Oct 05 16:17:44 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": null,
      "stats": {
        "retweet_count": 2,
        "favorite_count": 63,
        "reply_count": 4,
        "quote_count": 0
      }
    },
    {
      "id": "1974929750138503538",
      "text": "RT @dongxi_nlp: 「 LLM, Personalization 」\n\n记得 GPT-5 推出的时候，就已经感觉到，LLM 发展到今天，单纯的比拼 benchmark，已不再是所有的意义。而 模型如何理解用户，personalization 的能力越来越重要。\n\n这…",
      "created_at": "Sun Oct 05 20:08:39 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1974928420435022023",
        "text": "「 LLM, Personalization 」\n\n记得 GPT-5 推出的时候，就已经感觉到，LLM 发展到今天，单纯的比拼 benchmark，已不再是所有的意义。而 模型如何理解用户，personalization 的能力越来越重要。\n\n这周看到两篇很好的工作 PREFDISCO 和 PDR Bench，都是跟 personalization相关。\n\n两篇论文中，Personalization 的定义已经远超风格微调。Personalization 不是换语气，而是让模型围绕用户的目标、偏好和约束来思考和行动。\n\n良好的 personalization AI 需要做到：\n\n- 建立真实的用户模型\n- 调整推理和研究过程\n- 同时确保输出既对齐用户又事实正确\n\nPREFDISCO 聚焦即时个性化 reasoning ；PDR Bench 研究长周期、多来源的 deep research。前者通过互动发现偏好，后者依靠档案和语境长期规划。\n\n学到了！\n\n期待更多围绕 personalization benchmark提出的新的方法。",
        "created_at": "Sun Oct 05 20:03:22 +0000 2025",
        "lang": "zh",
        "media": [
          {
            "type": "photo",
            "id": "1974925075917799426",
            "url": "https://pbs.twimg.com/media/G2hX5JgXgAIsmXM.jpg"
          }
        ],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1477948736156454913",
          "name": "马东锡 NLP",
          "screen_name": "dongxi_nlp",
          "description": "Prev. PhD @Stockholm_Uni | Alumni @KTHuniversity @uppsalauni Sharing insights on AI, autonomous agents, and large language & reasoning models",
          "followers_count": 29970,
          "friends_count": 806,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 41,
          "favorite_count": 180,
          "reply_count": 8,
          "quote_count": 2
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 41,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1974948224654889211",
      "text": "https://t.co/T6ulacaCWG OpenAI即将发布「Agent Builder」，轻松拖拽，人人都能打造AI智能体\n作者：Alexey Shabanov\n\nOpenAI即将在10月6日的「开发者日」活动（Dev Day）上发布全新的「Agent Builder」（智能体构建工具），这款新工具直接对标Zapier和n8n等老牌自动化流程产品，目标用户则是希望轻松创建复杂AI智能体工作流程的开发者和团队。\n\n像拼乐高一样，轻松搭建AI智能体\n\n与传统的手写代码方式不同，「Agent Builder」采用了直观的可视化界面。它提供了一个拖拽式的画布，让用户能像搭积木一样，快速拼出自己想要的AI智能体。这些智能体可以涵盖客服机器人、数据增强流程、问答助手，以及文档比对工具等众多场景。\n\n在这个画布上，有各种模块化的组件供你选择：\n- 逻辑模块：例如条件判断（if-else）和循环（loop）结构。\n- 连接器：比如MCP（模型连接协议）等连接工具。\n- 用户审批步骤：允许人工审核AI的决策。\n- 安全防护模块（Guardrails）：避免AI做出意外或错误的决策。\n- 文件搜索与数据转换模块：轻松实现数据的检索和格式转化。\n\n可以看出，这些功能跟目前市面上的智能化工作流工具类似，但更加深度地整合了OpenAI的AI模型，形成独特优势。\n\n毫无疑问，这款工具最直接的受益者就是开发者、解决方案架构师，以及那些已经在使用OpenAI API的企业。\n\n传统上，如果要开发一个AI智能体，你可能要花不少时间在繁琐的代码集成上。而现在，只需在OpenAI平台的专属界面中打开这个工具，便可通过侧边栏上的组件库，拖拽出自己的AI流程。这种方式大幅降低了门槛，即便不是专业开发人员，也能快速上手、搭建出可投入生产环境的AI应用。\n\n此外，Agent Builder还提供了完善的测试和预览功能。在发布智能体之前，你可以轻松地进行调试、预览效果，从而快速迭代并确保其稳定性。\n\n回头看，OpenAI最早仅仅提供单纯的模型接口（API），如今却越来越注重生态建设，围绕自身的AI模型打造丰富的配套工具和平台。「Agent Builder」正是这一生态战略的重要一环，它帮助用户自主快速地创建AI智能体，并保证智能体与OpenAI自家的模型、基础设施、以及安全机制紧密集成。\n\n当然，自动化流程市场竞争早已十分激烈。不过，OpenAI显然有自己的底气。他们押宝的是：\n- 与自身AI模型的深度整合；\n- 极佳的用户体验；\n- 可能推出的预制逻辑模块（例如安全防护机制）。\n\n这些都是OpenAI与竞争对手们拉开差距的关键。",
      "created_at": "Sun Oct 05 21:22:04 +0000 2025",
      "lang": "zh",
      "media": [
        {
          "type": "video",
          "id": "1974934676033650688",
          "url": "https://video.twimg.com/amplify_video/1974934676033650688/vid/avc1/3628x2160/C1loB8ejqM_vlOhv.mp4?tag=21",
          "bitrate": 25128000
        }
      ],
      "retweet": null,
      "quoted": null,
      "stats": {
        "retweet_count": 65,
        "favorite_count": 302,
        "reply_count": 41,
        "quote_count": 22
      }
    },
    {
      "id": "1974948453269852298",
      "text": "原文：https://t.co/sDDM5XLZdV",
      "created_at": "Sun Oct 05 21:22:58 +0000 2025",
      "lang": "ja",
      "media": [],
      "retweet": null,
      "quoted": null,
      "stats": {
        "retweet_count": 2,
        "favorite_count": 8,
        "reply_count": 1,
        "quote_count": 0
      }
    },
    {
      "id": "1974957399288267069",
      "text": "https://t.co/RqqwPP5vlX 这机器人不让人省心呐😅",
      "created_at": "Sun Oct 05 21:58:31 +0000 2025",
      "lang": "zh",
      "media": [
        {
          "type": "video",
          "id": "1974759460246552576",
          "url": "https://video.twimg.com/ext_tw_video/1974759460246552576/pu/vid/avc1/768x576/6hWZFZUC0RdKfA0g.mp4?tag=12",
          "bitrate": 2176000
        }
      ],
      "retweet": null,
      "quoted": null,
      "stats": {
        "retweet_count": 2,
        "favorite_count": 25,
        "reply_count": 2,
        "quote_count": 1
      }
    }
  ]
}