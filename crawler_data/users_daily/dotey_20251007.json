{
  "user": {
    "screen_name": "dotey",
    "name": "",
    "description": "",
    "followers_count": 0,
    "verified": false,
    "is_blue_verified": false
  },
  "date": "20251007",
  "last_updated": "2025-10-18T01:37:33.466253",
  "tweet_count": 23,
  "tweets": [
    {
      "id": "1975350962132037963",
      "text": "codex 产品团队招人",
      "created_at": "Tue Oct 07 00:02:24 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975328478351495200",
        "text": "📣 I'm hiring for the Codex product team!\n\nYou might be a good fit if you are\n- A very producty engineer\n- Or a very technical PM or designer\n- Passionate about tools\n- AGI-pilled\n\nRequirements\n- You shipped code to prod recently\n- Work from OAI offices in SF\n\nInterested -> 🧵",
        "created_at": "Mon Oct 06 22:33:03 +0000 2025",
        "lang": "en",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "413490474",
          "name": "Alexander Embiricos",
          "screen_name": "embirico",
          "description": "Codex @OpenAI",
          "followers_count": 15529,
          "friends_count": 997,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 58,
          "favorite_count": 1291,
          "reply_count": 70,
          "quote_count": 6
        }
      },
      "stats": {
        "retweet_count": 0,
        "favorite_count": 5,
        "reply_count": 0,
        "quote_count": 1
      }
    },
    {
      "id": "1975351314218651949",
      "text": "地址：https://t.co/4TrjIftF8s",
      "created_at": "Tue Oct 07 00:03:48 +0000 2025",
      "lang": "ja",
      "media": [],
      "retweet": null,
      "quoted": null,
      "stats": {
        "retweet_count": 1,
        "favorite_count": 8,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1975393070595424756",
      "text": "https://t.co/hhlA9Jutzw Sora 搞这种鱼眼摄像头视频都能以假乱真了！",
      "created_at": "Tue Oct 07 02:49:43 +0000 2025",
      "lang": "zh",
      "media": [
        {
          "type": "video",
          "id": "1975183535716581376",
          "url": "https://video.twimg.com/ext_tw_video/1975183535716581376/pu/vid/avc1/720x1280/ipnLjSbPqwdeW47y.mp4?tag=12",
          "bitrate": 2176000
        }
      ],
      "retweet": null,
      "quoted": null,
      "stats": {
        "retweet_count": 6,
        "favorite_count": 62,
        "reply_count": 6,
        "quote_count": 1
      }
    },
    {
      "id": "1975408858492182655",
      "text": "RT @Yangyixxxx: 最近Lex和TG创始人Pavel Durov的访谈很值得一看\n4个多小时的播客有些长，我是看了AI文字版\n以下是一些我认为有意思的观点片段👇🏻",
      "created_at": "Tue Oct 07 03:52:27 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1975404410105987423",
        "text": "最近Lex和TG创始人Pavel Durov的访谈很值得一看\n4个多小时的播客有些长，我是看了AI文字版\n以下是一些我认为有意思的观点片段👇🏻",
        "created_at": "Tue Oct 07 03:34:47 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "3122661542",
          "name": "Yangyi",
          "screen_name": "Yangyixxxx",
          "description": "Believing is seeing",
          "followers_count": 107201,
          "friends_count": 479,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 9,
          "favorite_count": 62,
          "reply_count": 2,
          "quote_count": 2
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 9,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1975409153410519355",
      "text": "RT @hongming731: 刚看完 @lexfridman 和 Telegram 创始人 Pavel Durov 四个半小时的访谈，真的被 Pavel Durov 吸引，但是很难说清楚具体是哪种气质吸引和打动我，幸好有 AI，我把原文和一些打动我的原句发给他，他帮我梳理和…",
      "created_at": "Tue Oct 07 03:53:38 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1973751095483912459",
        "text": "刚看完 @lexfridman 和 Telegram 创始人 Pavel Durov 四个半小时的访谈，真的被 Pavel Durov 吸引，但是很难说清楚具体是哪种气质吸引和打动我，幸好有 AI，我把原文和一些打动我的原句发给他，他帮我梳理和总结，我觉得挺有洞见的，分享个大家 ⬇️ \n\n--------------------------------\n\n看完这场访谈，很多人会被 Pavel Durov 吸引。这种吸引力，并非来自科技富豪的光环，而是源于一种现代社会极其罕见的品质：他是一个原则的实践者，而非宣讲者。\n\n他的独特之处在于，他的人生和他的产品，都由一套完全相同的、不可妥协的底层代码驱动。\n\n他的内在基石：一个被理性校准的自我\n\nDurov 一切行为的起点，是对自我进行了彻底的梳理和校准。他追求的不是快乐或成功，而是一种不受外界干扰的内在秩序。\n\n首先，他重新定义了生存的价值。他认为，“按照你所信仰的原则生活是值得的，即使这样的生命可能比在奴役中度过的漫长生命更短暂。” 当一个人从根本上接纳了这一点，外部的威胁就很难再动摇他。\n\n其次，他将自己的心智和身体视为最宝贵的工具，并用极端的理性去维护它。他戒酒，并非出于道德说教，而是基于一个简单的逻辑：“如果你的大脑是你通往成功和幸福之路上最宝贵的工具，你为什么要为了短暂的快乐去摧毁这个工具呢？”\n\n同样，他几乎不用手机，因为他认为手机会打乱人的自主议程。他说：“我想定义我生命中什么是重要的。我不想让其他人或公司告诉我今天什么重要。”\n\n这种极度的自律，本质上是一种信息和干扰的过滤机制。他主动切断了那些会制造情绪波动、分散精力、侵蚀意志的外部输入，从而保证了自己决策的纯粹和坚定。\n\n他的外在创造：原则的物理化延伸\n\nTelegram 不是一个普通的商业产品，它是 Durov 内在原则的物理化实现。\n\n在团队管理上，他追求极致的精悍和高效。他有一个反共识的观点：“我职业生涯中有几次，解雇一名工程师实际上导致了生产力的提高。” 这背后是他对组织的深刻理解：臃肿和低效是组织的顽疾，一个平庸的成员会拖累整个系统。因此，他宁缺毋滥，只与最顶尖的人才合作。\n\n在技术架构上，他将保护隐私的原则写入了代码。Telegram 的数据架构被设计成任何单一实体都无法访问。这不是一个可以被打破的承诺，而是一个物理限制。这让他在面对强大压力时，拥有了技术上的“无法遵从”的底气。\n\n这种设计思想，是把人性中不可靠的“信任”因素，替换为数学上可靠的“约束”因素。这是一个典型的工程师解决方案。\n\n当原则与世界碰撞\n\n当这样一个内外高度统一的个体，带着他的创造物在世界上运行时，与现有秩序的冲突就变得不可避免。\n\n他在法国的遭遇，以及来自多国政府的持续压力，都证明了这一点。这些外部系统试图用它们惯用的方式——威逼、利诱、消耗——来控制他。\n\n但他最强大的武器，恰恰是他的原则本身。在访谈中，他平静地表明了自己的底线：“我宁愿失去我所拥有的一切，也不愿屈服于这种压力。”\n\n这句话之所以有分量，是因为他的人生实践证明了这不是一句空话。他不被金钱驱动，不依赖于任何单一市场，甚至对个人安危表现出一种超然。当控制者发现他们所有的筹码都无效时，控制本身就瓦解了。\n\n因此，这场访谈最打动人的，不是那些传奇经历，而是揭示了一种可能性：\n\n一个人，可以通过几条简单但坚定的原则，构建起内在的自我和外在的事业。并且，用一种近乎苛刻的知行合一，去捍卫这套体系的完整性。\n\nPavel Durov 的稀缺之处，在于他活成了一套自洽且坚固的逻辑。在这个充满妥协和噪音的世界里，这种纯粹性，本身就是一种力量。",
        "created_at": "Thu Oct 02 14:05:06 +0000 2025",
        "lang": "zh",
        "media": [
          {
            "type": "photo",
            "id": "1973751074197823490",
            "url": "https://pbs.twimg.com/media/G2QsJQSbYAIfnkJ.jpg"
          }
        ],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1061781458107326464",
          "name": "ginobefun",
          "screen_name": "hongming731",
          "description": "👨‍💻 拥有十多年开发与架构经验  \n🌐 努力打造 https://t.co/1TEy9PIP1u，为开发者筛选优质内容  \n🛠 全力开发 https://t.co/HxuhervLoL，提供专业文本润色服务  \n📱 正在构建 https://t.co/vaP78R1eWo，让社交媒体使用更智能、更有目的  \n✨ 致力于成为有趣的人，做有趣的事",
          "followers_count": 7588,
          "friends_count": 1430,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 124,
          "favorite_count": 494,
          "reply_count": 16,
          "quote_count": 9
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 124,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1975414551601348830",
      "text": "RT @JamesGoong: 我称之为“使用 AI 的第一性原理”。\n\n你需要提供的，只有你的当前情况（the facts），和你的终极目标（the goal），然后让 AI 去层层拆分。\n\n相当于是业务上的 plan mode。在这个过程中和 AI 共创，不断添加信息细节，…",
      "created_at": "Tue Oct 07 04:15:05 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1975397777418166489",
        "text": "我称之为“使用 AI 的第一性原理”。\n\n你需要提供的，只有你的当前情况（the facts），和你的终极目标（the goal），然后让 AI 去层层拆分。\n\n相当于是业务上的 plan mode。在这个过程中和 AI 共创，不断添加信息细节，让整个计划更符合自己的实际情况。\n\n整个流程应该是 top-down 的。\n\n不要自己在那琢磨一些中间态或者里程碑，然后一点点去问 AI 细节，整个流程变成 bottom-up。最后很有可能路径更长，且最后的结果产生了偏移。",
        "created_at": "Tue Oct 07 03:08:25 +0000 2025",
        "lang": "zh",
        "media": [
          {
            "type": "photo",
            "id": "1975394575759122435",
            "url": "https://pbs.twimg.com/media/G2oC5otbIAMDWnk.jpg"
          },
          {
            "type": "photo",
            "id": "1975395019340271616",
            "url": "https://pbs.twimg.com/media/G2oDTdLaUAApvHd.jpg"
          }
        ],
        "retweet": null,
        "quoted": {
          "id": "1974769226255925522",
          "text": "用 AI 问问题的方式，一定程度上反映出我们的潜意识和思维模式。\n\n我想大部分程序员和我一样，因为多年 problem solving 的训练，习惯碰到一个具体问题的时候，再找 AI 寻求一个解法。对于我们来说，AI 只是下一代的搜索引擎，stack overflow，代码完成，github。\n\n这种思维模式用来上班没什么问题，也确实会提高工作效率。但是用在创业或者赚钱上，天生就是一条长路径。\n\n现在 AI 的能力，完全能够让你找到一个对标，或者有一个模糊想法后，帮你一起逐步细化拆分，找到业务模型。然后根据你的历史对话记忆，优化成适合你的方案。\n\n从这点来看，你最终要解决的问题，只有“如何赚钱”。这才是最短路径。\n\n你需要 AI 成为你的麦肯锡，IBM，埃森哲。而不是用 AI 碰到问题，解决问题。然后在旁枝末节上解决了一个又一个的交付问题，最后回到根上，在那里发愁说，东西现在搞完了，接下来怎么赚钱呢。\n\n这是我过去几个月用 AI 的一点感悟。对于大部分人来说，你应该成为 AI 的手，而不是 AI 的脑。\n\n当然，最终做决定的，仍然是你。",
          "created_at": "Sun Oct 05 09:30:47 +0000 2025",
          "lang": "zh",
          "media": [],
          "retweet": null,
          "quoted": null,
          "user": {
            "id": "1708132468216487936",
            "name": "在悉尼和稀泥",
            "screen_name": "JamesGoong",
            "description": "💰 上班牛马，下班副业，周末学术，闲暇咨询。边赚工资边搞钱 🚀 做过产品，踩过坑，亏过百万，也赚过📖 记录真实的赚钱过程，研究副业、出海方法，分享真实经历",
            "followers_count": 19174,
            "friends_count": 268,
            "verified": false,
            "is_blue_verified": true
          },
          "stats": {
            "retweet_count": 14,
            "favorite_count": 122,
            "reply_count": 8,
            "quote_count": 5
          }
        },
        "user": {
          "id": "1708132468216487936",
          "name": "在悉尼和稀泥",
          "screen_name": "JamesGoong",
          "description": "💰 上班牛马，下班副业，周末学术，闲暇咨询。边赚工资边搞钱 🚀 做过产品，踩过坑，亏过百万，也赚过📖 记录真实的赚钱过程，研究副业、出海方法，分享真实经历",
          "followers_count": 19174,
          "friends_count": 268,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 75,
          "favorite_count": 357,
          "reply_count": 14,
          "quote_count": 8
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 75,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1975446136778301563",
      "text": "为什么要直接做成 Agent 而不是直接使用 Claude Code 呢？\n\n因为这个 Agent 是专门用来基于某个内部 Design System 生成 UI 代码，虽然 Claude Code 也可以完成这样的任务，但是有几个原因：\n\n1. 使用难度\n- 能让 Claude Code 基于某个没有训练的 Design Sytem 生成代码，需要一定的提示词说明，对于普通用户使用门槛较高\n- Claude Code 不能直接预览代码的效果，他们做了一个类似于 v0 dev 的 UI，可以直接在浏览器实时预览 AI 生成的代码，不需要搭建任何环境\n\n2. 成本\n- 使用 Claude Code 每次开始任务之前要大量检索文档，Token 消耗比较大，上下文也会占用较多，但是制作成独立的 Agent 后可以对系统提示词进行优化，将文档内容针对 Agent 优化，可以节约上下文。\n\n3. 权限\n- 目前他们不是所有人都能用 Claude Code，一些非开发人员并没有配置 Claude Code，做成独立的 Agent 工具可以让更多人直接使用",
      "created_at": "Tue Oct 07 06:20:35 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975430365704822840",
        "text": "@dotey After admitting Claude Code is built on that SDK , Bro spent hours to design an agent again for a task which Claude Code can definitely do. how about using Claude Code to design your UI ?",
        "created_at": "Tue Oct 07 05:17:55 +0000 2025",
        "lang": "en",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1727424565649735680",
          "name": "Jiaju LIN",
          "screen_name": "JiajuAgency",
          "description": "Phd in PSU, Exploring Next-Generation Human-Machine Collaboration Paradigm ｜AIGC4Education | Agent Learning | Machine Psychologist |",
          "followers_count": 22,
          "friends_count": 96,
          "verified": false,
          "is_blue_verified": false
        },
        "stats": {
          "retweet_count": 0,
          "favorite_count": 2,
          "reply_count": 1,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 18,
        "favorite_count": 94,
        "reply_count": 5,
        "quote_count": 1
      }
    },
    {
      "id": "1975570690628825352",
      "text": "我不看好 Agent Builder，不要因为是 OpenAI 做的就觉得会成。\n\n技术人员不屑于用，写代码笔者简单直接多了何况还有AI辅助\n\n普通人用不来，很难用\n\n过不了多久就没人提起这产品\n\n当然这是我个人观点",
      "created_at": "Tue Oct 07 14:35:31 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975560022831555037",
        "text": "🚀 对Open AI agent Builder的一些预测：Codex CLI与Agent Builder深度融合，专注“Agent开发Agent”领域，打破非专业用户的技术壁垒！  \n\n1. **Agent Builder：CLI代码框架的可视化外壳**  \n   Agent Builder将CLI生成的复杂代码架构（节点、逻辑、API调用）转化为直观的可视化工作流。非专业用户无需理解代码细节，通过拖拽调整代理行为，CLI则在后台确保代码高效执行。\n\n2. **CLI：Agent Builder的开发引擎**  \n   CLI作为核心引擎，接收用户输入的上下文和需求，生成结构化代码框架，供Builder渲染为可视化节点。CLI还能优化代码、处理错误，确保代理逻辑健壮。\n\n3. **双模式Agent Builder**  \n   - **Manual Mode**：如当前演示，用户手动设计节点和流程，CLI提供实时代码补全和调试支持。  \n   - **Full Auto Mode（Agent Mode）**：用户仅提供需求（如“构建一个自动化客服代理”），CLI基于上下文自动生成完整节点图和流程逻辑，Builder呈现为可视化界面。后端代码统一由CLI生成，确保一致性与可扩展性。\n\n4. **互相促进的闭环**  \n   - 非专业用户通过Builder的Auto Mode快速上手，生成代理原型；  \n   - 专业开发者用CLI微调代码逻辑，反馈到Builder优化可视化；  \n   - Agent Mode的迭代学习能力（基于用户反馈和CLI优化）让代理开发越来越智能，接近“Agent自编程”境界！\n\n未来，CLI+Agent Builder将让任何人轻松构建复杂AI代理，近一步释放部分非技专业背景用户创造力！🌟 #OpenAI #CodexCLI #AgentBuilder #AIAgent",
        "created_at": "Tue Oct 07 13:53:08 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1915972877821542400",
          "name": "半步",
          "screen_name": "banbudev",
          "description": "Sharing how to build with AI, from idea to product ｜ 暗中移半步，大地尽回春",
          "followers_count": 27,
          "friends_count": 65,
          "verified": false,
          "is_blue_verified": false
        },
        "stats": {
          "retweet_count": 0,
          "favorite_count": 7,
          "reply_count": 1,
          "quote_count": 2
        }
      },
      "stats": {
        "retweet_count": 4,
        "favorite_count": 161,
        "reply_count": 60,
        "quote_count": 12
      }
    },
    {
      "id": "1975590914828738709",
      "text": "有些 Agent 还是需要 Agentic Loop 配合 Workflow 控制\nhttps://t.co/5MkaNrhrds",
      "created_at": "Tue Oct 07 15:55:53 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975587220150231224",
        "text": "@dotey @wwwgoubuli 目前 Agentic Loop 还是需要额外的 Workflow 控制。\n\n举个例子，Gemini DeepResearch的【开始研究】按钮就是workflow，Claude DR没有，结果有的时候就出bug，明明他让我确认研究计划，我还没发消息，他就开始研究了。\n\n完全的纯粹的 Agentic 追求意义不大，比较确定的逻辑，可以加workflow。",
        "created_at": "Tue Oct 07 15:41:12 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "116355740",
          "name": "九原客",
          "screen_name": "9hills",
          "description": "喜欢一切美好的事物。目前聚焦在大模型领域。",
          "followers_count": 21911,
          "friends_count": 999,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 0,
          "favorite_count": 14,
          "reply_count": 2,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 0,
        "favorite_count": 2,
        "reply_count": 1,
        "quote_count": 0
      }
    },
    {
      "id": "1975591013532962861",
      "text": "https://t.co/Hkn2iMBpXk",
      "created_at": "Tue Oct 07 15:56:16 +0000 2025",
      "lang": "zxx",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975587747097419887",
        "text": "@dotey @wwwgoubuli 我观察比较好的 Agent 产品，比如 DeepResearch、Kimi的 OK Computer，乃至于 Claude Code，里面都有写死的固定的工作流的部分，不是完全纯粹的 Agentic 循环，只能说最核心的部分是 单/多 Agent。",
        "created_at": "Tue Oct 07 15:43:18 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "116355740",
          "name": "九原客",
          "screen_name": "9hills",
          "description": "喜欢一切美好的事物。目前聚焦在大模型领域。",
          "followers_count": 21911,
          "friends_count": 999,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 2,
          "favorite_count": 14,
          "reply_count": 2,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 0,
        "favorite_count": 3,
        "reply_count": 1,
        "quote_count": 0
      }
    },
    {
      "id": "1975600620515049761",
      "text": "这是个好话题：AI 时代 codingbase 和架构被加速孵化，稳定性越来越难做\n\n这是个两难的事，追求速度，就会影响稳定性，追求稳定性就会影响速度，AI 进一步加速了这种冲突。\n\n在传统软件开发，我们引入了各种流程来避免这样的问题：设计先行、代码审查、自动化测试、持续集成部署。\n\n当然能做到严格遵守这样开发流程的并不容易，现实中总有各种各样的阻力。\n\nAI 编程加速了开发毋庸置疑，那种几行提示词就一个应用程序或者功能模块就做出来的感觉简直太美妙了。\n\n当大家习惯了这种 AI Coding 速度，就很难忍受以前那种先设计、再去实现的速度，就会倾向于简化设计，尽快生成代码，甚至于设计都是 AI 来做的。\n\n至于代码审查更是灾难，没有人能一次review几千上万行代码，只能求助于 AI review。\n\n单元测试的自动化测试已经形同虚设，因为都是 AI 生成的，通不过 AI 会修改测试用例，让它能通过。\n\nE2E（端到端）测试还是有意义，毕竟这部分还要人工辅助才能写的出来，是模拟的真实用户使用应用成熟的流程。\n\n现在还属于过度过程，最终会是人向 AI 妥协，不会再坚守以前传统的开发流程，而是开始做出改变。\n\n首先架构上会往微服务模式上靠，无论前端还是后端，当年一度红火然后又人人喊打的微服务微前端又要焕发第二春了，微服务的好处就是每个模块独立，代码不多，对 AI 来说上下文够用，普通的 Coding Agent 足够应付\n\n然后人的重心将会放在两端：需求定义和测试验收，中间部分绝大部分交给 AI 自主完成\n\n再就是人才的需求分化：\n一端是产品经理兼程序员，既懂需求，又懂程序，但是程序不用太精通，不懂程序的产品经理将会很少，就像现在做测试都要会写自动化测试一样。这部分需求还是会很大。\n\n一端是技术专家，精通编程、技术架构，需要很长的培养周期，负责为应用搭建适合 AI 开发的架构，负责解决 AI 解决不了的技术问题，这部分人不会太多，但是会很值钱。",
      "created_at": "Tue Oct 07 16:34:27 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975221669934555394",
        "text": "暴论一下\nAI 时代的到来，codebase 和架构将以前所未有的速度不断的腐化。\n这会意味着稳定性越来越难做。之前被忽视的很多稳定性细节以及最佳实践都会在 AI 时代被放大。越来越多的初创公司比预期的更早的遇到自己的架构瓶颈或者到了技术债务的偿还时刻\n而稳定性越来越难做的另外一层含义就是，能做稳定性的人也越来越少。而在 vibe coding 盛行的情况下，能静下心来做稳定性，扣指标的人也越来越少",
        "created_at": "Mon Oct 06 15:28:38 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "3281599238",
          "name": "NadeshikoManju@薫る花は凛と咲く7月5日播出",
          "screen_name": "Manjusaka_Lee",
          "description": "A Python developer at day A Java developer at night PyCon China organizer @pythonhunter__ co-founder @containerd CTL maintainer. Super fan of @yurucamp_anime",
          "followers_count": 33926,
          "friends_count": 1157,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 25,
          "favorite_count": 247,
          "reply_count": 26,
          "quote_count": 10
        }
      },
      "stats": {
        "retweet_count": 5,
        "favorite_count": 53,
        "reply_count": 5,
        "quote_count": 6
      }
    },
    {
      "id": "1975611395019579705",
      "text": "主要是像winter这样优秀的太少了\n个人是难对抗趋势的",
      "created_at": "Tue Oct 07 17:17:16 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975609804979855709",
        "text": "宝玉老师我觉得你这段讲的太悲观了。AI写代码不是完全黑箱，可以对它提要求，比如单元测试要进行分组，覆盖哪些情况。AI做review也不是只能给结论说通过与否，它也可以对代码逻辑做归纳、摘要，辅助人来决策。我认为好的程序员叠加AI技能会让能力放大，掌控更大规模的代码，而不是退让出空间让AI生成垃圾代码。",
        "created_at": "Tue Oct 07 17:10:57 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "132827204",
          "name": "winter",
          "screen_name": "winter_cn",
          "description": "",
          "followers_count": 2113,
          "friends_count": 332,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 1,
          "favorite_count": 15,
          "reply_count": 0,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 0,
        "favorite_count": 4,
        "reply_count": 3,
        "quote_count": 0
      }
    },
    {
      "id": "1975618390032326670",
      "text": "市场肯定是有的，多大不好说",
      "created_at": "Tue Oct 07 17:45:04 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975617628581601756",
        "text": "@dotey 对编程有一定概念，但苦于配置各种第三方脚手架嫌麻烦的人才是大多数。吃的就是这部分人的市场。捅破这层窗户纸，对OpenAI来说就能收获一大批增量。",
        "created_at": "Tue Oct 07 17:42:02 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1352188646766436352",
          "name": "高级分析师",
          "screen_name": "techeconomyana",
          "description": "经济数据分析，科技行业动态追踪。",
          "followers_count": 37050,
          "friends_count": 547,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 0,
          "favorite_count": 2,
          "reply_count": 2,
          "quote_count": 1
        }
      },
      "stats": {
        "retweet_count": 0,
        "favorite_count": 4,
        "reply_count": 2,
        "quote_count": 0
      }
    },
    {
      "id": "1975618551471092127",
      "text": "RT @howie_serious: chatgpt 悄悄更新了视频输入功能😱\n\n更新 ios app 到最新版；app 内无法上传视频，需要把视频从 photos app 拖动到 chatgpt app（新技能 get✅）。\n\nllm 多模态的最后一块板补齐了：文本语音视频，…",
      "created_at": "Tue Oct 07 17:45:42 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1975532443433390131",
        "text": "chatgpt 悄悄更新了视频输入功能😱\n\n更新 ios app 到最新版；app 内无法上传视频，需要把视频从 photos app 拖动到 chatgpt app（新技能 get✅）。\n\nllm 多模态的最后一块板补齐了：文本语音视频，输入输出。 https://t.co/dYWwT5cwDR",
        "created_at": "Tue Oct 07 12:03:32 +0000 2025",
        "lang": "zh",
        "media": [
          {
            "type": "video",
            "id": "1975532225224712193",
            "url": "https://video.twimg.com/amplify_video/1975532225224712193/vid/avc1/1320x2868/X5mJ-EhWSqMjbKJM.mp4?tag=21",
            "bitrate": 10368000
          }
        ],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "709787332254117888",
          "name": "howie.serious",
          "screen_name": "howie_serious",
          "description": "purity of thought. be exactly who you are : just a serious man. 思想纯净，做好自己：严肃对待自己的兴趣，不要浮皮潦草。\n\n公众号：howie和小能熊\nyoutube：https://t.co/J1aSMKnUFo",
          "followers_count": 45375,
          "friends_count": 318,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 37,
          "favorite_count": 253,
          "reply_count": 16,
          "quote_count": 6
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 37,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1975618771789447649",
      "text": "RT @Sprites06: 最近不是AI挺火的嘛，公司就要招人，我就负责整个技术面的工作，直到我去作为面试官面了不少人以后，得出了不少的感悟，感觉还挺有意思的，分享一下。…",
      "created_at": "Tue Oct 07 17:46:35 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1975376053901344798",
        "text": "最近不是AI挺火的嘛，公司就要招人，我就负责整个技术面的工作，直到我去作为面试官面了不少人以后，得出了不少的感悟，感觉还挺有意思的，分享一下。\n关键词。简历的关键词一定要和岗位描述相匹配，一份简历就是看10秒钟，就是非常有目的性的，就想要一个即插即用过来就能知道我要做的事情的，我最希望看到的就是我现在要做的事情刚好就是应聘者做过这个事情的，那我一定会给他个面试机会让他过来聊一聊。不要说会学习什么的话，我招人就是来干活的，不是陪你共同成长的。说我黑心吧，但是我招一个人，公司也要算部门成本到我头上的，招了人不满意要换还得和HR解释。\n内推很重要。有时候人事部门会给你推一些人，有时就是从招聘平台来的，有时候就是会给你介绍一下是谁推荐的，这个时候筛简历的人，多少都会更认真的看一眼简历，碍于人情世故的原因，只要不要和需求区别太大，一般都会给个机会，多一个机会就多一个可能性。\n视频面试：牢牢抓住第一个你上手说话的机会，一场面试让你自由发挥说话的机会并不多，就像掼蛋升级打扑克一样，先手权最重要，你先讲开你的东西，让别人顺着你铺的线索问下去，在你开的场子被别人提问远远要好过你别人去给你出问题来的要好。\n举一个最近面试成功的小伙子吧，他自我介绍的时候就自己切到共享屏幕，自己用ppt来介绍自己，然后展示了自己做的一个项目界面效果，做讲解演示，然后就讲着讲着我就发现里面有个功能是我目前项目想要的。\n然后我提了问题，他也很顺利的去给我解答了，最终这个面试者就拿下了offer，但是如果他不是强行展示给我看，我对他的这个项目一点兴趣都没有，他也就没办法展示他能帮我解决问题的能力。\n说实话，我承认我做应届毕业生的时候就完全100%没有这样的认知。\n其实吧，面试是面试官额外多的一项工作。负责技术面的一二面，往往就是部门领导先找个技术负责人过来面试，其实人家的工作是很忙的，有时候甚至就是过来临时充当一下角色而已，不要内耗，对不上眼缘很正常，不要把面试当作是天大的事情，我们只是一个商品，这家不买，找别家就是了。\n以前是参加面试，换了一个角色思考问题，就能够知道自己以前面试失败的原因了，还是要多体验啊。",
        "created_at": "Tue Oct 07 01:42:06 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1784288373571833857",
          "name": "NextPluse",
          "screen_name": "Sprites06",
          "description": "Keeping you at the heart of AI. We share top news, insightful analysis, and expert opinions on everything AI. #ArtificialIntelligence #DeepLearning #Innovation",
          "followers_count": 1155,
          "friends_count": 307,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 95,
          "favorite_count": 709,
          "reply_count": 18,
          "quote_count": 2
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 95,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1975624716955140354",
      "text": "推荐阅读：Vibe engineering（凭感觉工程）\n\n作者：Simon Willison\n2025年10月7日\n\n现在，“凭感觉编程”（vibe coding）这个概念已经相当流行了。这种方式用AI快速、随意、甚至有些不负责任地开发软件——完全靠Prompt推动，根本不管代码具体是如何运行的。然而，这也带来了一个新的问题：我们该怎么称呼光谱另一端的行为呢？也就是那些经验丰富的专业工程师们，认真地用大语言模型（LLMs）提升效率，并对最终产品的质量和稳定性负责？\n\n于是，我半开玩笑地提出了一个新词：凭感觉工程（vibe engineering）。\n\n其实，用LLMs高效开发真正严肃的软件项目，有一个不太被广泛讨论的真相：它真的很难。深入理解这些工具并不简单，使用过程中还有不少陷阱需要避免。同时，这些模型以惊人的速度输出可用代码，也在不断提高对工程师自身贡献价值的要求。\n\n最近一段时间，随着代码智能体（coding agents）的崛起，这种情况变得更加明显了。比如，2025年2月推出的Claude Code，4月OpenAI推出的Codex CLI，6月谷歌推出的Gemini CLI，这些工具能自主测试、迭代修改代码，直至达到预期目标。这类工具的出现极大提升了LLMs在现实编程场景中的实用性。\n\n我身边越来越多可信赖、经验丰富的软件工程师，开始同时运行多个代码智能体，让这些“数字助手”并行处理多个问题，从而大幅提高生产力。一开始我对此也持怀疑态度，但最近我也开始自己尝试运行多个智能体，发现效果惊人地好（尽管大脑也被折腾得够呛）。\n\n这与过去的“凭感觉编程”完全不一样了。过去我只是把一些简单、低风险的小任务交给LLMs，然后随便检查一下，只要能跑就行（比如我之前很多的小工具集就是这么来的）。但现在，用代码智能体反复迭代出能让我放心长期维护的生产级代码，显然完全是另一种体验。\n\n与此同时，我也越来越意识到，LLMs其实是在大力奖励那些早已广泛认可的优秀软件工程实践：\n\n- 自动化测试。\n如果你的项目有完善且稳定的测试套件，代码智能体的威力将彻底展现出来。如果没有自动测试，你的智能体可能会虚假地汇报功能正常，而实际上完全未经测试。同时，新功能可能悄悄地破坏了其他功能，你还浑然不觉。\n\n- 事前规划。\n编程前先有个清晰的计划很重要。有了智能体之后，这一点变得更加必要。你可以先用智能体完善规划，再放心让它执行。\n\n- 全面的文档。\n和人类程序员一样，LLMs也无法一次性记住所有代码。提供清晰的文档能让智能体直接调用其他模块的API，甚至直接根据文档帮你写出实现代码。\n\n- 良好的版本控制习惯。\n智能体改代码太快了，有个好用的版本管理习惯非常重要。LLMs在使用Git方面也表现非常出色，比如快速定位bug起源的git bisect命令，用得比多数开发者都熟练。\n\n- 高效的自动化流程。\n持续集成（CI）、自动格式化、持续部署到预览环境等，这些都能极大提高智能体的表现。同时，LLMs也能帮你迅速写出好用的自动化脚本，下次再用时更方便。\n\n- 代码审查文化。\n喜欢且善于快速高效地审查代码的人，使用LLMs会比那些宁愿自己写代码也不想审查别人代码的人舒服得多。\n\n- 一种“奇怪的管理技巧”。\n从智能体那获得好的成果，感觉很像和人类同事合作——你要给出明确指令、提供必要上下文、有效反馈。当然，比起真实的人，LLMs要简单多了，毕竟你不用担心冒犯他们。但任何已有的管理经验此时都意外地派上了用场。\n\n- 高质量的手工QA（质量保证）能力。\n除了自动化测试，优秀的软件手动测试、对边界情况的敏锐洞察依然必不可少。\n\n- 出色的调研能力。\n解决问题的方法总有很多种，确定最合适的方案并验证其可行性，一直都是软件工程师的基本功。只有搞清楚方案，才能放心交给智能体去编写实际代码。\n\n- 能够快速部署预览环境。\n智能体构建功能后，能够安全地部署到预览环境（而非直接上线生产），能极大降低风险，也让代码审查更有效率。\n\n- 知道哪些任务能交给AI，哪些必须自己做。\n这一点一直在演化。随着LLMs的进步，知道何时使用智能体，何时该自己上，已经成为一种关键直觉。\n\n- 重新评估时间预估的直觉。\n工程师进行项目耗时预估历来就很难，但AI辅助编程让这变得更难了：以前耗时很长的任务现在可能迅速完成，而新因素不断涌现，甚至让预估变得更加复杂。\n\n如果你真想最大化利用这些工具，你必须处于自己的最佳状态。你不再只是写代码，而要研究解决方案、架构设计、撰写需求、定义成功标准、设计智能体循环、规划QA流程、管理一批狡猾且随时想蒙混过关的“数字实习生”，并且——花大量时间进行代码审查。\n\n这些，其实早就是资深软件工程师们的日常了。\n\nAI工具放大了已有的专业能力。经验越丰富的软件工程师，用LLMs和代码智能体的产出效率就越高、效果越好。\n\n“凭感觉工程”，真的要叫这个吗？\n\n这个名字傻不傻？可能有点儿吧。“Vibes”这个词用在AI圈，早就有点审美疲劳了。而“凭感觉编程”本来也常被用来讽刺程序员的不负责任。不过，我现在想把“vibes”抢回来，用在一个更积极的地方。\n\n我一直不喜欢“码农”和“工程师”的人为区别，这种分类通常带点傲慢。但现在，我觉得适当的傲慢或许还真有点必要了！\n\n凭感觉工程，正是要与过去随意的“凭感觉编程”划清界限，凸显出这是一种更严肃、更有难度、更复杂的AI开发方法。\n\n我还喜欢这个词里的反差感——把“感觉”（vibes）和“工程”（engineering）混在一起，多少带点恶作剧的感觉，也许更容易让人记住。\n\n过去我尝试推广新名词，几乎都失败了。这次，不妨再试试“凭感觉”，说不定就成了呢？",
      "created_at": "Tue Oct 07 18:10:12 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975570458683834729",
        "text": "Vibe coding is irresponsibly building software through dice rolls, not caring what code is produced\n\nWhat about when engineers at the top of their game use AI tools responsibly to accelerate their work?\n\nI propose \"vibe engineering\"!",
        "created_at": "Tue Oct 07 14:34:36 +0000 2025",
        "lang": "en",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "12497",
          "name": "Simon Willison",
          "screen_name": "simonw",
          "description": "Creator @datasetteproj, co-creator Django. PSF board. Hangs out with @natbat. He/Him. Mastodon: https://t.co/t0MrmnJW0K Bsky: https://t.co/OnWIyhX4CH",
          "followers_count": 117963,
          "friends_count": 5550,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 167,
          "favorite_count": 2146,
          "reply_count": 398,
          "quote_count": 93
        }
      },
      "stats": {
        "retweet_count": 52,
        "favorite_count": 231,
        "reply_count": 8,
        "quote_count": 7
      }
    },
    {
      "id": "1975625384466260461",
      "text": "这篇写的特别好：\n&gt; LLMs其实是在大力奖励那些早已广泛认可的优秀软件工程实践：\n- 自动化测试\n- 事前规划\n- 全面的文档\n- 良好的版本控制习惯\n- 高效的自动化流程\n- 代码审查文化\n- 高质量的手工QA能力\n- 知道哪些任务能交给AI，哪些必须自己做\n- ……\nhttps://t.co/e94A4wVEd6",
      "created_at": "Tue Oct 07 18:12:51 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975624716955140354",
        "text": "推荐阅读：Vibe engineering（凭感觉工程）\n\n作者：Simon Willison\n2025年10月7日\n\n现在，“凭感觉编程”（vibe coding）这个概念已经相当流行了。这种方式用AI快速、随意、甚至有些不负责任地开发软件——完全靠Prompt推动，根本不管代码具体是如何运行的。然而，这也带来了一个新的问题：我们该怎么称呼光谱另一端的行为呢？也就是那些经验丰富的专业工程师们，认真地用大语言模型（LLMs）提升效率，并对最终产品的质量和稳定性负责？\n\n于是，我半开玩笑地提出了一个新词：凭感觉工程（vibe engineering）。\n\n其实，用LLMs高效开发真正严肃的软件项目，有一个不太被广泛讨论的真相：它真的很难。深入理解这些工具并不简单，使用过程中还有不少陷阱需要避免。同时，这些模型以惊人的速度输出可用代码，也在不断提高对工程师自身贡献价值的要求。\n\n最近一段时间，随着代码智能体（coding agents）的崛起，这种情况变得更加明显了。比如，2025年2月推出的Claude Code，4月OpenAI推出的Codex CLI，6月谷歌推出的Gemini CLI，这些工具能自主测试、迭代修改代码，直至达到预期目标。这类工具的出现极大提升了LLMs在现实编程场景中的实用性。\n\n我身边越来越多可信赖、经验丰富的软件工程师，开始同时运行多个代码智能体，让这些“数字助手”并行处理多个问题，从而大幅提高生产力。一开始我对此也持怀疑态度，但最近我也开始自己尝试运行多个智能体，发现效果惊人地好（尽管大脑也被折腾得够呛）。\n\n这与过去的“凭感觉编程”完全不一样了。过去我只是把一些简单、低风险的小任务交给LLMs，然后随便检查一下，只要能跑就行（比如我之前很多的小工具集就是这么来的）。但现在，用代码智能体反复迭代出能让我放心长期维护的生产级代码，显然完全是另一种体验。\n\n与此同时，我也越来越意识到，LLMs其实是在大力奖励那些早已广泛认可的优秀软件工程实践：\n\n- 自动化测试。\n如果你的项目有完善且稳定的测试套件，代码智能体的威力将彻底展现出来。如果没有自动测试，你的智能体可能会虚假地汇报功能正常，而实际上完全未经测试。同时，新功能可能悄悄地破坏了其他功能，你还浑然不觉。\n\n- 事前规划。\n编程前先有个清晰的计划很重要。有了智能体之后，这一点变得更加必要。你可以先用智能体完善规划，再放心让它执行。\n\n- 全面的文档。\n和人类程序员一样，LLMs也无法一次性记住所有代码。提供清晰的文档能让智能体直接调用其他模块的API，甚至直接根据文档帮你写出实现代码。\n\n- 良好的版本控制习惯。\n智能体改代码太快了，有个好用的版本管理习惯非常重要。LLMs在使用Git方面也表现非常出色，比如快速定位bug起源的git bisect命令，用得比多数开发者都熟练。\n\n- 高效的自动化流程。\n持续集成（CI）、自动格式化、持续部署到预览环境等，这些都能极大提高智能体的表现。同时，LLMs也能帮你迅速写出好用的自动化脚本，下次再用时更方便。\n\n- 代码审查文化。\n喜欢且善于快速高效地审查代码的人，使用LLMs会比那些宁愿自己写代码也不想审查别人代码的人舒服得多。\n\n- 一种“奇怪的管理技巧”。\n从智能体那获得好的成果，感觉很像和人类同事合作——你要给出明确指令、提供必要上下文、有效反馈。当然，比起真实的人，LLMs要简单多了，毕竟你不用担心冒犯他们。但任何已有的管理经验此时都意外地派上了用场。\n\n- 高质量的手工QA（质量保证）能力。\n除了自动化测试，优秀的软件手动测试、对边界情况的敏锐洞察依然必不可少。\n\n- 出色的调研能力。\n解决问题的方法总有很多种，确定最合适的方案并验证其可行性，一直都是软件工程师的基本功。只有搞清楚方案，才能放心交给智能体去编写实际代码。\n\n- 能够快速部署预览环境。\n智能体构建功能后，能够安全地部署到预览环境（而非直接上线生产），能极大降低风险，也让代码审查更有效率。\n\n- 知道哪些任务能交给AI，哪些必须自己做。\n这一点一直在演化。随着LLMs的进步，知道何时使用智能体，何时该自己上，已经成为一种关键直觉。\n\n- 重新评估时间预估的直觉。\n工程师进行项目耗时预估历来就很难，但AI辅助编程让这变得更难了：以前耗时很长的任务现在可能迅速完成，而新因素不断涌现，甚至让预估变得更加复杂。\n\n如果你真想最大化利用这些工具，你必须处于自己的最佳状态。你不再只是写代码，而要研究解决方案、架构设计、撰写需求、定义成功标准、设计智能体循环、规划QA流程、管理一批狡猾且随时想蒙混过关的“数字实习生”，并且——花大量时间进行代码审查。\n\n这些，其实早就是资深软件工程师们的日常了。\n\nAI工具放大了已有的专业能力。经验越丰富的软件工程师，用LLMs和代码智能体的产出效率就越高、效果越好。\n\n“凭感觉工程”，真的要叫这个吗？\n\n这个名字傻不傻？可能有点儿吧。“Vibes”这个词用在AI圈，早就有点审美疲劳了。而“凭感觉编程”本来也常被用来讽刺程序员的不负责任。不过，我现在想把“vibes”抢回来，用在一个更积极的地方。\n\n我一直不喜欢“码农”和“工程师”的人为区别，这种分类通常带点傲慢。但现在，我觉得适当的傲慢或许还真有点必要了！\n\n凭感觉工程，正是要与过去随意的“凭感觉编程”划清界限，凸显出这是一种更严肃、更有难度、更复杂的AI开发方法。\n\n我还喜欢这个词里的反差感——把“感觉”（vibes）和“工程”（engineering）混在一起，多少带点恶作剧的感觉，也许更容易让人记住。\n\n过去我尝试推广新名词，几乎都失败了。这次，不妨再试试“凭感觉”，说不定就成了呢？",
        "created_at": "Tue Oct 07 18:10:12 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "3178231",
          "name": "宝玉",
          "screen_name": "dotey",
          "description": "Prompt Engineer, dedicated to learning and disseminating knowledge about AI, software engineering, and engineering management.",
          "followers_count": 137079,
          "friends_count": 1423,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 52,
          "favorite_count": 231,
          "reply_count": 8,
          "quote_count": 7
        }
      },
      "stats": {
        "retweet_count": 5,
        "favorite_count": 19,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1975627096442503314",
      "text": "https://t.co/ogvNiXHOKX 这个点评太犀利了😂\n> 真正的机会根本不在这个工具本身，而在于当人们发现“快速搭Demo”和“真正的生产环境部署”根本不是一回事时，由此引爆的4亿-40亿美元级别的咨询市场。\n\n完整推文：大家都在狂吹 OpenAI 的 Agent Builder，但我实际用了下，发现有不少坑！\n\n过去 24 小时，我深入测试了 OpenAI 的新工具 Agent Builder，同时也翻遍了社区反馈，发现不少大家没注意到的现实问题。官方高调宣称这是一次耗资 40 亿美元的“AI 民主化”大行动，但真实情况更像是“用画布包装过的生态锁定”。\n\n先说说炒作的宣传：\n\n大家一听到“Agent Builder”，纷纷高呼：“AI民主化！零代码革命！Zapier终结者！”\n\n但现实到底如何呢？\n\n实际情况是，它本质上只是一个给开发者用的拖拽式流程搭建工具，而且只能用 OpenAI 自家的 GPT 模型。\n\n这可不是民主化，这明明是“生态圈绑定”（vendor lock-in）。\n\n我拿它和n8n、Make、Flowise这些主流工具一对比，发现：\n•复杂度：差不多（甚至可能还更难一点）\n•集成灵活度：比竞品差（节点功能较少）\n•模型选择：只有一个（GPT系列）\n•迁移优势：为零（重新构建所有流程，学习成本高）\n\n而这其中，只能用 GPT 模型 才是最大的坑。\n\n我自己的体验是：\n•Claude 做复杂分析更合适\n•Gemini 有特定擅长场景\n•GPT 呢，说白了，就是做点特别简单的活儿\n\n强制用户只能用 GPT，就像告诉一个木匠：“对不起，以后你只能用锤子造房子了！”\n\n⸻\n\n社区的声音也很明确地分成两派：\n\n正面评价：\n•“几个小时搞定采购机器人，迭代快了70%！”（Ramp）\n•“原型快速验证真的香！”（@piotrmacai）\n•“与 OpenAI 集成超级顺滑”（废话，当然顺滑！）\n\n现实吐槽：\n•“界面复杂，功能却很基础”（@wyndomb）\n•“不是自主智能体，就是写死的脚本”（@Vivek_5151）\n•“毫无迁移动力”（我本人+很多其他人）\n\n从反馈来看，Agent Builder 最适合的场景只有一种：你本来就深度绑定 OpenAI。\n\n但对于生产环境、多模型组合、或者已经熟练使用n8n/Make的人，真没什么吸引力。\n\n⸻\n\n来聊聊官方文档没告诉你的几点：\n\n✅ 快速原型验证（确实如此）\n✅ 非常适合做演示Demo（确实如此）\n✅ 企业级安全和权限管理（确实如此）\n\n❌ 厂商锁定风险（完全被忽略了）\n❌ 与竞品相比节点库少（也完全没提）\n❌ 依然需要技术知识（没说）\n❌ 并不是真正的“零代码”工具，非技术人员搞不定（更是只字未提）\n\n所谓“AI民主化”，一经仔细推敲，根本站不住脚。\n社区里甚至有声音说：\n•“对团队来说过于技术导向”\n•“根本不具备企业生产级规模的必要功能”\n\n本质上，这就是个给开发者用的低代码工具，而非人人都能上手的零代码平台。\n\n⸻\n\n再来实际算一下迁移的成本：\n•重建所有已有流程\n•学习新工具\n•锁定单一模型（GPT）\n•祈祷功能能逐渐完善\n\n换来的是什么？仅仅是官方口中的“原生 OpenAI 体验”，但你本来通过 API 就可以轻松实现这个功能。\n\n如果你的流程目前在 n8n 或者 Make 已经运转良好，干嘛自找麻烦？\n\n⸻\n\n那 Agent Builder 什么时候确实有用？\n1.你本来就完全在 OpenAI 的生态圈里。\n2.你需要快速搭建演示 Demo。\n3.你就是要做客服类机器人（这个的确是强项）。\n4.你完全不在乎多模型的灵活性。\n\n如果你不属于上述情况，那么 Agent Builder 就是个为不存在的问题提供的解决方案。\n\n⸻\n\n一个有点争议的观点：\n\nAgent Builder 确实验证了视觉化 AI 智能体构建工具这个方向有前景，但并不是官方吹的那种颠覆性革命。\n\n它更像是针对特定用户场景做了微小的优化，再被“民主化”的营销话术包装了一圈而已。\n\n真正的赢家是：\n•OpenAI 自己（因为生态锁定）\n•已经完全绑定 OpenAI 的企业用户\n\n输家则是：\n•本来用n8n或Make却误以为找到迁移理由的人\n•真正需要灵活多模型组合的开发者\n\n⸻\n\n我的建议和真实看法：\n•是不错的原型工具\n•绝对不值得为了它专门迁移\n•当前的宣传过度炒作了3-5倍\n\n真正的机会根本不在这个工具本身，而在于当人们发现“快速搭Demo”和“真正的生产环境部署”根本不是一回事时，由此引爆的4亿-40亿美元级别的咨询市场。\n\n如果你现在的自动化流程已经跑得稳稳的，团队也都熟悉现有平台，模型也很灵活，何苦折腾自己？\n\n记住：“原生 OpenAI 体验”根本算不上卖点，因为 API 早就可以无痛调用。\n\n⸻\n\n同意还是不同意？欢迎留言交流一下你的观点！\n\n我特别好奇的是，有没有人找到了真正值得迁移的理由？",
      "created_at": "Tue Oct 07 18:19:39 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975567323256803390",
        "text": "Everyone's losing their minds over OpenAI's Agent Builder.\n\nI spent the last 24 hours testing it and analyzing community reactions.\n\nHere's what nobody's saying about the $4B \"democratization\" play that's actually just vendor lock-in with a canvas:\n\nThe hype: \"Agent Builder democratizes AI! No-code revolution! Zapier killer!\"\n\nThe reality: It's a drag-and-drop builder for developers that's locked to GPT-only models.\n\nThat's not democratization. That's an ecosystem play.\n\nI tested it against n8n, Make, and Flowise.\n\nComplexity level: Same (if not slightly higher)\nIntegration flexibility: Worse (thin node sets)\nModel options: One (GPT only)\nMigration benefit: Zero\n\nThe GPT-only lock is the real killer.\n\nI use Claude for complex analysis. Gemini for specific tasks. GPT for... honestly, the braindead simple stuff.\n\nBeing forced into one model is like telling a carpenter they can only use hammers.\n\nCommunity reactions are split exactly how you'd expect:\n\nPositive takes:\n→ \"Built a buyer agent in hours, 70% iteration reduction!\" (Ramp)\n→ \"Game-changer for prototyping\" (@piotrmacai)\n→ \"Seamless OpenAI integration\" (obviously)\n\nReality checks:\n→ \"UI too complicated, features basic\" (@wyndomb)\n→ \"Not autonomous, just rigid scripts\" (@Vivek_5151)\n→ \"No migration incentive\" (me + many others)\n\nThe pattern I'm seeing: Great for prototyping IF you're already deep in OpenAI's ecosystem.\n\nNot great for: Production systems, multi-model workflows, anyone using n8n/Make successfully.\n\nHere's what the docs won't tell you:\n\n✓ Fast prototyping (true)\n✓ Good for demos (true)\n✓ Enterprise features (true)\n\n✗ Vendor lock-in risk (ignored)\n✗ Limited node library vs competitors (ignored)\n✗ Still requires technical knowledge (ignored)\n✗ Not actually \"no-code\" for non-technical users (ignored)\n\nThe \"democratization\" claim falls apart under scrutiny.\n\nCommunity feedback shows it's \"too technical for teams\" and \"missing features for production-scale.\"\n\nIt's low-code for developers, not no-code for everyone.\n\nReal talk: If your workflows already work in n8n or Make, save yourself the migration headache.\n\nThe math doesn't add up:\n→ Rebuild all integrations\n→ Learn new platform\n→ Lock into single model\n→ Hope features catch up\n\nFor what benefit? \"OpenAI native\" that you can already get via API calls?\n\nWhere Agent Builder actually makes sense:\n\n1. You're already 100% in OpenAI ecosystem\n2. You need fast prototyping for demos\n3. You're building customer service bots (their sweet spot)\n4. You don't care about model flexibility\n\nEveryone else? This is a solution looking for a problem.\n\nThe controversial truth: Agent Builder validates visual agent building as a category, but it's not the revolution they're selling.\n\nIt's an incremental improvement for a narrow use case wrapped in \"democratization\" marketing.\n\nThe winners: OpenAI (ecosystem lock-in), enterprises already using their stack\n\nThe losers: n8n/Make users expecting a reason to switch, anyone needing multi-model flexibility\n\nMy take: Good prototyping tool. Not worth migrating for. Overhyped by 3-5x.\n\nThe real opportunity isn't in the tool itself.\n\nIt's in the $400M-$4B consulting market that opens up when everyone realizes prototyping ≠ production deployment.\n\nStay where you are. Let others debug the hype cycle.\n\nYour existing automations work. Your team knows the platform. Your models are flexible.\n\n\"OpenAI native\" isn't a feature when you can call their API from anywhere.\n\nAgree? Disagree? Drop your take below.\n\nI'm curious if anyone found a compelling reason to migrate that I'm missing.",
        "created_at": "Tue Oct 07 14:22:08 +0000 2025",
        "lang": "en",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1491071979155247110",
          "name": "Nozz",
          "screen_name": "NoahEpstein_",
          "description": "Enjoy what you do.",
          "followers_count": 23463,
          "friends_count": 71,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 95,
          "favorite_count": 866,
          "reply_count": 75,
          "quote_count": 17
        }
      },
      "stats": {
        "retweet_count": 10,
        "favorite_count": 28,
        "reply_count": 6,
        "quote_count": 2
      }
    },
    {
      "id": "1975628788043292951",
      "text": "RT @gefei55: 刚在小红书看到一类针对正在直播的主播的骗局，可谓是量身定制。\n\n直播评论区留言，说主播你手机亮度不够，调一下，并且把方法写出来了：手机下拉，长按移动数据点进去，有个画质模式。\n\n实际骗子这一步是为了得到主播的手机号，因为移动数据长按之后会显示手机号码。…",
      "created_at": "Tue Oct 07 18:26:23 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1975547035312136251",
        "text": "刚在小红书看到一类针对正在直播的主播的骗局，可谓是量身定制。\n\n直播评论区留言，说主播你手机亮度不够，调一下，并且把方法写出来了：手机下拉，长按移动数据点进去，有个画质模式。\n\n实际骗子这一步是为了得到主播的手机号，因为移动数据长按之后会显示手机号码。\n\n得到主播的手机号之后，在任何一个需要手机验证码验证的平台，进行下一步操作，直播画面里就会出现短信验证码，骗子看到了，立马输入。\n\n之后就可以为所欲为了。",
        "created_at": "Tue Oct 07 13:01:31 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "362252075",
          "name": "哥飞",
          "screen_name": "gefei55",
          "description": "哥飞，出海鼓励师，SEO爱好者，Adsense玩家，出海AI工具方向创业者。\n同名公众号写了五百多篇出海搞流量免费教程文章。",
          "followers_count": 45187,
          "friends_count": 965,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 33,
          "favorite_count": 293,
          "reply_count": 22,
          "quote_count": 6
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 33,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    },
    {
      "id": "1975638759312904196",
      "text": "OpenAI 发布了 Sora 2 提示词指南，在 OpenAI Cookbook上\n\n如何打造一条成功的视频提示词\n\n在动笔之前\n\n想象一下，写提示词就像是给一位从未见过你故事板的摄影师做简报。如果你省略了细节，他就会即兴发挥——那你可能就得不到你想要的画面了。通过具体说明这个“镜头”需要达到什么效果，你就能让模型更好地控制画面，并保持生成结果的一致性。\n\n但反过来，留出一些想象空间也同样威力无穷。给模型更多的创作自由，可能会带来意想不到的惊喜和美妙的诠释。这两种方法都行得通：详细的提示词能带来更强的控制力和一致性，而简单的提示词则为创意成果打开了空间。 如何取得平衡，取决于你的目标和期望的效果。\n\n把你的提示词看作是一份创意的愿望清单，而不是一份死板的合同。就像使用 ChatGPT 一样，多次使用同一条提示词会产生不同的结果——这是一个特性，不是一个 bug。每一次生成都是一次全新的尝试，有时候第二个或第三个版本效果会更好。\n\n最重要的是，要做好反复迭代的准备。对镜头、灯光或动作的微小调整，都可能让结果发生翻天覆地的变化。你需要和模型合作：你来指导方向，模型则负责提供富有创意的各种版本。\n\n这并非一门精确的科学——请将下面的指南看作是我们与模型打交道时总结出的一些实用建议。\n\n视频分辨率\n\n视频分辨率直接影响 Sora 生成画面的视觉保真度和动态连贯性。更高的分辨率能更精确地生成细节、纹理和光影过渡，而较低的分辨率会压缩视觉信息，通常会带来模糊感或瑕疵。\n\n视频长度\n\n通常，在较短的视频里，模型能更可靠地遵循指令。为了获得最佳效果，尽量生成简短的镜头。如果你的项目允许，将两个4秒的片段剪辑到一起，效果可能会比直接生成一个8秒的片段更好。\n\n行之有效的提示词结构\n\n一条清晰的提示词，应该像你把镜头草图画在故事板上一样进行描述。说明镜头的取景，点明景深，分步骤描述动作，并设定好灯光和色调。用几个独特的细节来锚定你的主体，使其保持可识别性，同时用一个单一、合理的动作让镜头更容易跟拍。\n\n在一条提示词里描述多个镜头也是可以的，如果你需要覆盖一个连续的场景。当你这样做时，要让每个镜头的描述块各自独立：一次只描述一个机位设置、一个主体动作和一种光线方案。这让你能灵活地生成独立的短片或更长的连续时刻，具体取决于你的项目。把每个镜头都当作一个创意单元，你可以将它们剪辑在一起，也可以让它们作为一个连续的序列一次性播放出来。\n\n- 简短的提示词给模型更多创作自由，你可能会得到意想不到的惊喜。\n- 更长、更详细的提示词会限制模型的创造力。它会尽力遵循你的指导，但可能不总是那么可靠。\n\n这是一个简短提示词的例子：\n> 在一段90年代纪录片风格的采访中，一位瑞典老人坐在书房里说：“我至今还记得我年轻的时候。”\n\n这个提示词很可能会成功：\n- \"90年代纪录片风格\" 设定了视频的风格。模型会据此选择镜头、灯光和色调等参数。\n\n- \"一位瑞典老人坐在书房里\" 简单描述了主体和场景，让模型在人物和环境的具体样貌上有自由发挥的空间。\n\n- \"说：“我至今还记得我年轻的时候。”\" 描述了对白。Sora 很可能能精确地复现这句对白。\n\n这个提示词能稳定地生成符合这些要求的视频。然而，这不一定能完全符合你的设想，因为许多细节都没有被提及。例如，提示词没有描述具体时间、天气、服装、氛围、角色的相貌和年龄、摄像机角度、剪辑、布景设计以及许多其他因素。除非你描述这些细节，否则 Sora 会自己创造。\n\n进阶玩法：超详细提示词\n\n对于复杂的、电影感的镜头，你可以超越标准的提示词结构，用专业的制作术语来指定外观、机位设置、调色、音景，甚至镜头的拍摄理由。这就像导演给摄影团队或视觉特效（VFX）团队开会一样。关于镜头、滤镜、灯光、调色和运动的详细线索，能帮助模型锁定一个非常具体的美学风格。\n\n例如，你可以描述​观众首先注意到什么​、​摄影机平台和镜头​、​光线方向​、​调色板​、​纹理质感​、场景内音效​**(Diegetic sound，即影片中角色能听到的声音，与作为背景音乐的非场景音相对)** 和​镜头时机​。当你想匹配真实的电影摄影风格（例如，IMAX 航拍、35mm 手持拍摄、复古 16mm 纪录片）或在多个镜头间保持严格的连续性时，这种方法非常有效。\n\n范例\n\n\"\"\"\n格式与外观\n\n时长4秒；180°快门（这是一种电影拍摄技术，快门角度为180度，能产生自然的运动模糊效果）；数字拍摄，模仿65毫米胶片（65 mm photochemical）的对比度质感；细颗粒感；高光部分有轻微的光晕（halation）；无胶片抖动（gate weave）。\n\n镜头与滤镜\n\n32毫米/50毫米球面定焦镜头；1/4 黑柔焦滤镜（Black Pro-Mist 1/4，一种摄影滤镜，能柔化高光，降低对比度，营造梦幻氛围）；轻微旋转环形偏振镜（CPL）以控制火车车窗的反光。\n\n调色/色板\n\n高光：带有琥珀色调的清晨阳光。\n\n中间调：平衡的中性色，阴影部分略带青色。\n\n暗部：柔和、中性的黑色，为保留薄雾感而轻微提亮。\n\n光线与氛围\n\n自然阳光从摄像机左侧以低角度射入（早上7:30）。\n\n补光：轨道旁使用4x4英尺的银色反光板（4×4 ultrabounce silver）。\n\n对面墙壁作为吸光（Negative fill）。\n\n场景光源：站台上的钠灯逐渐变暗。\n\n氛围：轻柔的薄雾；火车排出的废气飘过光束。\n\n地点与构图\n\n城市通勤站台，黎明时分。\n\n前景：黄色安全线，长凳上的咖啡杯。\n\n中景：等待的乘客在薄雾中形成剪影。\n\n背景：进站的火车正在刹车。\n\n避免出现任何标牌或公司品牌。\n\n服装/道具/群众演员\n\n主要角色：30多岁的旅行者，身穿海军蓝外套，单肩背着背包，手机随意地拿在身侧。\n\n群众演员：穿着暗色调衣服的通勤者；一名推着自行车的骑行者。\n\n道具：纸质咖啡杯，拉杆箱，LED 出发信息牌（显示通用目的地）。\n\n音效\n\n仅场景内音效（Diegetic only）：微弱的铁轨摩擦声，火车刹车的嘶嘶声，远处模糊的广播声（-20 LUFS，响度单位，-20 LUFS表示一个相对安静的音量标准），低沉的环境嗡嗡声。\n\n脚步声和纸张的沙沙声；无配乐或后期添加的音效。\n\n优化分镜表（2个镜头/总时长4秒）\n\n0.00–2.40 — “抵达漂移”（32毫米镜头，肩扛式缓慢向左移动）\n\n镜头滑过站台标牌边缘；浅焦揭示出旅行者在画面中央，正望着轨道远方。晨光在镜头中绽放；火车头灯在薄雾中柔和地闪耀。目的：建立场景和基调，暗示期待感。\n\n2.40–4.00 — “转身停顿”（50毫米镜头，缓慢弧线推近）\n\n切到一个更近的过肩弧线镜头，火车停稳；旅行者稍微转向镜头，阳光勾勒出他脸颊的轮廓，手机屏幕也反射出光芒。他的眼睛向上瞥向某个看不见的东西。目的：用最少的动作创造一个聚焦于人物的瞬间。\n\n摄影机备注（为何这样拍）\n\n保持视线高度较低并靠近镜头轴线，以营造亲密感。\n\n允许火车玻璃产生微小的眩光，作为一种美学纹理。\n\n保留手持拍摄的微小不完美，以增加真实感。\n\n不要让过曝的眩光破坏剪影的清晰度；保留皮肤高光的平滑过渡。\n\n后期制作\n\n叠加细颗粒感和轻微的色度噪点以增加真实感；场景光源有克制的光晕；使用冷暖色调的LUT（色彩查找表）营造清晨的色调分离感。\n\n混音：优先处理火车和环境细节，而不是脚步声的瞬态。\n\n封面帧：旅行者转身的瞬间，金色的轮廓光，进站的火车在背景薄雾中柔焦。\n\n\"\"\"\n\n用视觉线索引导画面风格\n\n在写提示词时，​风格是引导模型走向你期望结果的最强有力的杠杆之一​。描述整体的美学——例如，​*“1970年代电影风格”​、“史诗级、IMAX 规模的场景”* 或 ​*“16毫米黑白胶片”*​——能为所有其他选择定下视觉基调。尽早确立这种风格，模型才能将其贯穿始终。\n\n同样的细节，在你要求的是一部精致的好莱坞戏剧、一段手持手机拍摄的短片，还是一则颗粒感十足的复古广告时，模型解读出的效果会截然不同。一旦基调设定好，再用镜头、动作和光线来添加具体细节。\n\n清晰至上。不要用模糊的线索，如:\n- 不要说​“一条美丽的街道”​，而是写​“湿漉漉的沥青路面，斑马线，霓虹灯在水坑中的倒影”​。\n- 不要说​“快速移动”​，而是具体说明*​“骑车人蹬了三下踏板，刹车，停在人行横道前”*。指向可见结果的动词和名词总能给你带来更清晰、更一致的输出。\n- 不要说“电影感”，而是具体说明：“2.0倍变形宽银幕镜头​(一种电影镜头，能拍出宽银幕效果和标志性的水平眩光)​，浅景深​(shallow DOF)​，体积光​(volumetric light，也叫丁达尔效应，就是光线穿过烟雾或灰尘时形成的光柱)”\n\n摄影机方向和构图决定了镜头的观感。高角度的广角镜头会强调空间和环境，而平视的特写镜头则会聚焦于情感。景深则增加了另一层维度：浅景深可以让主体在模糊的背景中脱颖而出，而深景深则能让前景和背景都保持清晰。灯光同样能强烈地设定基调。柔和温暖的主光能营造出温馨的氛围，而单一的硬光加上冷色边缘则会推向戏剧化。\n\n在引入角色时，要预料到一些不可预测性——措辞的微小变化可能会改变角色的身份、姿势或场景的焦点。在不同镜头间保持描述的一致性，重复使用相同的措辞以确保连贯性，并避免混合可能相互冲突的特征。\n\n糟糕的示范\n> 摄影机镜头：电影感\n\n优秀的示范\n> 摄影机镜头：广角镜头，低角度\n>\n> 景深：浅景深（主体清晰，背景模糊）\n>\n> 光线与色调：温暖的逆光，带有柔和的轮廓光\n\n一些好的构图指令范例：\n- 广角建立镜头，平视角度\n- 广角镜头，跟随冲锋从左向右移动\n- 航拍广角镜头，轻微俯角\n- 中景特写，从背后略带角度\n\n一些好的摄影机运动指令范例：\n- 缓慢倾斜的镜头\n- 手持新闻采访式摄影机\n\n控制动作与时机\n\n动作往往是最难搞定的部分，所以要保持简单。每个镜头应该只有一个清晰的摄影机运动和一个清晰的主体动作。动作最好用节拍或计数的方式来描述——比如小步、手势或停顿——这样它们才感觉有时间上的依据。\n\n“演员走过房间”并不能提供太多信息。而像“演员向窗户走了四步，停顿了一下，在最后一秒拉上了窗帘”这样的描述，则使得时机精确且可实现。\n\n糟糕的示范\n> 演员走过房间。\n\n优秀的示范\n> 演员向窗户走了四步，停顿了一下，在最后一秒拉上了窗帘。\n\n光线与色彩的一致性\n\n光线和动作、场景一样，共同决定了画面的情绪。遍布画面的漫射光感觉平静而中性，而单一的强光源则会产生鲜明的对比和紧张感。当你想把多个片段剪辑在一起时，保持光线逻辑的一致性是使剪辑无缝衔接的关键。\n\n既要描述光的质感，也要描述能强化这种质感的色彩锚点。不要用像“光线明亮的房间”这样宽泛的描述，而要具体说明光源和色调的组合：“柔和的窗光，辅以温暖的台灯补光，以及来自走廊的冷色边缘光。”指定三到五种颜色有助于在不同镜头间保持色调的稳定。\n\n糟糕的示范\n> 光线与色调：光线明亮的房间\n\n优秀的示范\n> 光线与色调：柔和的窗光，温暖的台灯补光，来自走廊的冷色边缘光\n> 色调锚点：琥珀色、奶油色、胡桃棕\n\n为了对镜头的构图和风格进行更精细的控制，你可以使用图像输入作为视觉参考。你可以使用照片、数字艺术作品或AI生成的视觉素材。这可以锁定角色设计、服装、布景或整体美学等元素。模型会将这张图片作为第一帧的锚点，而你的文本提示词则定义了接下来发生的事情。\n\n对白与音效\n对白必须在提示词中直接描述。将它放在你的场景描述下方的一个单独区块里，这样模型就能清楚地区分视觉描述和口语台词。保持台词简洁自然，并尽量将对话限制在几句话内，以便时机能与你的视频长度相匹配。对于多角色场景，要一致地标记说话者并使用轮流发言的方式；这有助于模型将每句台词与正确角色的手势和表情联系起来。\n\n你还应该考虑节奏和时机：一个4秒的镜头通常可以容纳一两句简短的对话，而一个8秒的片段可以支持更多一些。冗长复杂的演讲不太可能同步得很好，而且可能会破坏节奏。\n\n如果你的镜头是无声的，你仍然可以用一个微小的声音来暗示节奏，例如“远处交通的嘶嘶声”或“一声清脆的折断声”。把它看作是一个节奏提示，而不是完整的音轨。\n\n带对白的提示词范例：\n\n\"\"\"\n一个狭窄、没有窗户的房间，墙壁是陈旧灰烬的颜色。天花板上悬挂着一个光秃秃的灯泡，灯光汇聚在中央那张伤痕累累的金属桌子上。两把椅子隔桌相对。一边坐着警探，风衣搭在椅背上，眼神锐利而不眨。他对面，嫌疑人懒散地靠着，烟雾慢悠悠地向天花板卷去。寂静压迫着一切，只有头顶灯光的微弱嗡嗡声打破了沉默。\n\n对白：\n- 警探：“你在撒谎。我能从你的沉默中听出来。”\n- 嫌疑人：“或许我只是懒得说话了。”\n- 警探：“不管怎样，今晚结束前你会开口的。”\n\"\"\"\n\n背景音描述范例：\n> 背景是意式浓缩咖啡机的嗡嗡声和人们的低语声。\n\n使用 Remix 功能进行迭代\n\nRemix 功能是用来微调的，不是用来赌运气的。用它来进行可控的、一次一项的修改，并说明你正在改变什么：“同样的镜头，换成85毫米镜头”，或者“同样的灯光，新的色调：青色、沙色、铁锈色。”当一个结果接近理想时，将它固定为参考，然后只描述需要调整的部分。这样，所有已经奏效的部分就能保持不变。\n\n如果一个镜头总是出错，那就把它简化：固定住镜头，简化动作，清空背景。一旦它成功了，再一步步地增加复杂性。\n\n- 提示词：“把怪物的颜色改成橙色”\n- 提示词：“紧接着又出来第二个怪物”\n\n提示词模板与范例\n\n提示词结构\n一种有效的提示词写法是将你希望模型使用的不同类型信息分开。​这并非一个放之四海而皆准的成功秘诀​，但它为你提供了一个清晰的框架，并使保持一致性变得更容易。并非每个细节都需要包含——如果某件事对镜头不重要，你可以省略它。\n\n事实上，​对某些元素保持开放性会鼓励模型更具创造力​。你对每个视觉选择的规定越不严格，模型就越有空间去解读，并用出人意料但往往很美妙的变体来给你惊喜。高度描述性的提示词会产生更一致、可控的结果，而较轻量的提示词则能解锁感觉新颖、富有想象力的多样化成果。\n\n描述性提示词模板：\n\n\"\"\"\n[用通俗的语言进行散文式的场景描述。描述角色、服装、布景、天气和其他细节。尽可能详细地描述，以生成符合你构想的视频。]\n\n摄影：\n\n摄影机镜头：[构图和角度，例如：广角建立镜头，平视角度]\n\n情绪：[整体基调，例如：电影感的紧张，俏皮的悬疑，奢华的期待]\n\n动作：\n\n- [动作1：一个清晰、具体的节拍或手势]\n\n- [动作2：片段内的另一个独特节拍]\n\n- [动作3：另一个动作或台词]\n\n对白：\n\n[如果镜头有对白，在此处或作为动作列表的一部分添加简短自然的台词。保持简短，以匹配视频长度。]\n\n\"\"\"\n\n提示词范例\n\n范例 1\n\n\"\"\"\n风格：手绘2D/3D混合动画，具有柔和的笔刷纹理、温暖的钨丝灯光和富有质感的定格动画感。美学风格唤起了2000年代中期的故事书动画感——舒适、不完美、充满机械魅力。微妙的水彩渲染和绘画般的纹理；色调上有冷暖平衡；电影感的运动模糊以增强动画的真实感。\n\n在一个杂乱的工作室里，架子上堆满了齿轮、螺栓和泛黄的蓝图。中央，一个小小的圆形机器人坐在一张木凳上，它凹陷的身体上贴着不匹配的金属板和旧漆层。它大大的发光眼睛闪烁着淡蓝色的光，紧张地摆弄着一个嗡嗡作响的灯泡。空气中回荡着安静的机械嗡鸣声，雨点敲打着窗户，背景中时钟在稳定地滴答作响。\n\n摄影：\n\n摄影机：中景特写，缓慢推进，悬挂的工具产生轻微的视差效果（parallax）。\n\n镜头：35毫米虚拟镜头；浅景深以柔化背景的杂乱。\n\n光线：来自头顶场景光源的暖色主光；来自窗户的冷色溢光以形成对比。\n\n情绪：温柔、奇幻，带有一丝悬念。\n\n动作：\n\n- 机器人敲了敲灯泡；火花噼啪作响。\n\n- 它吓得一哆嗦，灯泡掉了下来，眼睛睁得大大的。\n\n- 灯泡在慢动作中翻滚；它在最后一刻接住了它。\n\n- 一股蒸汽从它胸口喷出——既是松了口气，又带着自豪。\n\n- 机器人轻声说：“差点丢了……但我接住了！”\n\n背景音：\n\n雨声，时钟滴答声，柔和的机械嗡鸣声，微弱的灯泡嘶嘶声。\n\"\"\"\n\n范例 2\n\n\"\"\"\n风格：1970年代浪漫剧情片，用35毫米胶片拍摄，带有自然的镜头眩光、柔焦和温暖的光晕。轻微的胶片抖动（gate weave，老式胶片放映机因机械原因产生的轻微画面晃动）和手持微抖唤起了复古的亲密感。温暖的柯达风格调色；灯泡上有轻微光晕；胶片颗粒感和柔和的暗角以营造时代真实感。\n\n在黄金时刻，一个砖砌公寓的屋顶变成了一个小舞台。晾衣绳上挂着的白床单在风中摇曳，捕捉着最后一缕阳光。一串串不匹配的仙女灯在头顶微弱地嗡嗡作响。一个穿着飘逸红色丝绸连衣裙的年轻女子赤脚跳舞，卷发在渐逝的光线中闪耀。她的舞伴——袖子卷起，吊带松垮——在一旁拍手，笑容灿烂而毫无防备。下方，城市在汽车喇叭声、地铁的震动和远处的笑声中嗡嗡作响。\n\n摄影：\n\n摄影机：中景广角镜头，从平视角度缓慢向前推进。\n\n镜头：40毫米球面镜头；浅焦以将这对情侣与天际线分离开。\n\n光线：金色的自然主光，辅以钨丝灯补光；仙女灯提供边缘光。\n\n情绪：怀旧、温柔、电影感。\n\n动作：\n\n- 她旋转；裙摆飞扬，捕捉到阳光。\n\n- 女人（笑着说）：“看？今晚连这座城市都在和我们共舞。”\n\n- 他走上前，抓住她的手，将她带入阴影中。\n\n- 男人（微笑着说）：“那只是因为你在领舞。”\n\n- 床单飘过画面，短暂地遮住了天际线，然后再次分开。\n\n背景音：\n\n仅自然环境音：微弱的风声、布料飘动的声音、街道噪音、模糊的音乐。无额外配乐。\n\"\"\"",
      "created_at": "Tue Oct 07 19:06:00 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975577538975178814",
        "text": "OpenAI published a new Sora 2 Prompting Guide so I created a prompt template inspired by their recommendations that writes prompts for you\n\nPick your model (Sora 2 for 10s or Sora 2 Pro for 15s), choose from almost 100 styles, add a Cameo if you want, describe your idea and it generates a full prompt with all the cinematography and technical details\n\nTry it if you need help getting started with Sora 2 prompts",
        "created_at": "Tue Oct 07 15:02:44 +0000 2025",
        "lang": "en",
        "media": [
          {
            "type": "photo",
            "id": "1975577533811990531",
            "url": "https://pbs.twimg.com/media/G2qpTMkbIAMw2wj.jpg"
          }
        ],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "338443084",
          "name": "Tibor Blaho",
          "screen_name": "btibor91",
          "description": "Lead Engineer at @AIPRMcorp (https://t.co/fepyWfV4kA) and @lrt_co (https://t.co/p7LEvIKduG), building AIPRM for ChatGPT & Claude. Signal @ btibor.91",
          "followers_count": 31964,
          "friends_count": 2195,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 90,
          "favorite_count": 629,
          "reply_count": 18,
          "quote_count": 4
        }
      },
      "stats": {
        "retweet_count": 121,
        "favorite_count": 447,
        "reply_count": 6,
        "quote_count": 12
      }
    },
    {
      "id": "1975693360221298923",
      "text": "Google 推出 Gemini 2.5 Computer Use 模型\n\n今年早些时候，Google 就宣布了将通过 Gemini API 为开发者带来直接操控电脑界面的 AI 能力。今天，Google 正式推出了 Gemini 2.5 Computer Use模型（Gemini 2.5 Computer Use model）。\n\n这个专门的模型基于 Gemini 2.5 Pro 强大的视觉理解与推理能力构建，可以让 AI 智能体像人类一样，直接点击、滚动、输入文字，实现与网页或应用的交互。这一技术在多个网页和移动端界面的任务基准测试中，表现超越了当前领先的同类产品，而且反应速度更快。\n\n开发者们现在就可以通过 Gemini API，在 Google AI Studio 和 Vertex AI 中提前体验。",
      "created_at": "Tue Oct 07 22:42:58 +0000 2025",
      "lang": "zh",
      "media": [
        {
          "type": "video",
          "id": "1975693190704357376",
          "url": "https://video.twimg.com/amplify_video/1975693190704357376/vid/avc1/1920x1058/S-WhIDvxe46lJszu.mp4?tag=21",
          "bitrate": 10368000
        },
        {
          "type": "video",
          "id": "1975693190758805505",
          "url": "https://video.twimg.com/amplify_video/1975693190758805505/vid/avc1/3828x2108/-VktDU3qSRUTgd3D.mp4?tag=21",
          "bitrate": 25128000
        }
      ],
      "retweet": null,
      "quoted": {
        "id": "1975657080439906547",
        "text": "Introducing our new SOTA Gemini 2.5 Computer Use model, trained to take 13 different actions and navigate a browser. \n\nThis is just the first step in the Gemini computer use story : ) https://t.co/JfEF8yDN5i",
        "created_at": "Tue Oct 07 20:18:48 +0000 2025",
        "lang": "en",
        "media": [
          {
            "type": "photo",
            "id": "1975657077113798656",
            "url": "https://pbs.twimg.com/media/G2rxpOdawAAZGc2.jpg"
          }
        ],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "284333988",
          "name": "Logan Kilpatrick",
          "screen_name": "OfficialLoganK",
          "description": "Lead product for @GoogleAIStudio + the Gemini API. My views!",
          "followers_count": 217893,
          "friends_count": 2603,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 179,
          "favorite_count": 2176,
          "reply_count": 112,
          "quote_count": 38
        }
      },
      "stats": {
        "retweet_count": 40,
        "favorite_count": 195,
        "reply_count": 16,
        "quote_count": 4
      }
    },
    {
      "id": "1975695531432169642",
      "text": "太了不起了，Neuralink 可以通过意念操作机械手臂\n\n当事人 Nick Wray 的自述：\n\n大家好！抱歉这周更新晚了点，下次我尽量恢复到周日更新的节奏。\n\n一句话总结（TL;DR）：我又创造历史了！\n\n过去这一周绝对值得铭记！老实说，我已经想不起上一次认真工作满8个小时是什么时候了，而这一次，我竟然连续三天都完成了8小时的工作，这种感觉真的太棒了！\n\n星期二到星期四，我和辅助机械臂（Assistive Robotic Arm，简称ARA）团队在一起，利用我的脑机接口（BCI）控制机械臂，做了很多此前想都不敢想的事。这一周对我来说充满了“第二次”的人生第一次，我到现在还有点不敢相信。\n\n我第一次用自己的双手戴上了帽子，这是这么多年都没有过的事！我自己用微波炉热好了鸡块，还自己吃了下去！我学会了如何打开冰箱、如何给罐子取下盖子再盖回去！我甚至还尝试用BCI控制轮椅在室内缓缓前行，效果很好！\n\n除此之外，我还创下了两个新纪录（至少暂时还没人超过）：\n•在5分钟内用机械臂移动圆柱体的数量（39个）；\n•在专门用于测试中风患者手部灵活性的标准翻转插钉测试（dexterity test）中，在5分钟内翻转插钉的数量（5个）。\n\n更棒的是，我还完成了一个近乎不可思议的“神仙级”动作（视频周三就会发布哦！），这绝对排在我这周用机械臂做的事情的前5名里。\n\n这段经历实在太有趣了，也学到了超多新东西，进步特别大！能参与这个项目让我感到非常幸运。在此特别感谢一下 Neuralink 和 Buoniconti基金会，没有你们这一切根本不会实现。\n\n与此同时，我还花了一些时间在我的加密货币项目上。说实话，这本来只是我一时兴起的想法，并没打算认真做，但没想到一头扎进去后，却发现这个新领域居然如此吸引人。特别感谢我的核心团队伙伴：\n•@Vanguard0x\n•@SqyH100\n•@CoinWisdom1Hub\n\n你们的支持和帮助实在太重要了。我真的觉得这个项目在加密领域能做出一些真正与众不同的东西。毕竟在这个圈子里，真正踏踏实实做实事而不是只靠炒作的项目，真的不多。我真的很期待看到它最终会发展到什么样子。\n\n回想使用脑机接口以来的生活，至今仍然觉得十分梦幻又极具意义。我迫不及待地想知道接下来还能做到些什么！\n\n😎 大家记得做好事，当个好人啊！",
      "created_at": "Tue Oct 07 22:51:35 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": null,
      "quoted": {
        "id": "1975288020631749007",
        "text": "Hi everyone! Sorry for the late update. I’ll try to get back to Sundays.\n\nTL;DR: !!!!!\n\nThis was truly a week for the books. I can’t remember the last time I put in a solid 8 hour work day and last week I put in 3 in a row. It was one of the most incredible experiences of my life so far. I spent Tuesday, Wednesday, and Thursday working with the Assistive Robotic Arm (ARA) team operating the ARA with my BCI. It was a week of (second) firsts and I’m still trying to wrap my head around it all. I put on my own hat for the first time in years! I microwaved my own chicken nuggets and fed myself! I learned how to open my fridge and how to remove and replace lids on jars! I even got to try driving my wheelchair with it slowly inside. I did really well! I also hold the new records (for now) for the most cylinders moved across the table in 5 minutes (39) and the most pegs flipped in a standard dexterity test (usually used for stroke patients) in 5 minutes (5) and I pulled off a ridiculous trick shot (video coming Wednesday) on the dex test that was easily one of the top 5 things I did with the ARA. So much fun! So much learning! So much progress! This project is incredible and I’m so grateful to be a part of it. Shoutouts to @Neuralink and @BuonicontiFund for making this all possible.\n\nI’ve also been spending some time working on my crypto coin project. It really wasn’t supposed to become a project but it’s been kind of cool learning about something completely new to me. Huge thanks to my core team @Vanguard0x @SqyH100 @CoinWisdom1Hub for all their help and support. I really think this project has the potential to be something truly unique in the crypto space which, historically, doesn’t seem to lend itself to projects that are more about substance than hype. I’m excited to see where it goes!\n\nLife with my BCI has been and continues to be so surreal and so rewarding. Can’t wait to see what comes next! 😎 Be good, do good.",
        "created_at": "Mon Oct 06 19:52:17 +0000 2025",
        "lang": "en",
        "media": [
          {
            "type": "video",
            "id": "1975287087629766656",
            "url": "https://video.twimg.com/amplify_video/1975287087629766656/vid/avc1/3840x2160/_Ymu7ItELCnFdUVp.mp4?tag=21",
            "bitrate": 25128000
          }
        ],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "1949294835510431744",
          "name": "Nick Wray",
          "screen_name": "Telepath_8",
          "description": "🤖 BCI experiences shared are my own. Your results may vary.\n\nI'm a brilliant idiot, a Xennial, and a user of the Oxford comma.\n\n😎 Be good, do good.\n\n@P8BCI",
          "followers_count": 4564,
          "friends_count": 982,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 270,
          "favorite_count": 1954,
          "reply_count": 107,
          "quote_count": 85
        }
      },
      "stats": {
        "retweet_count": 10,
        "favorite_count": 75,
        "reply_count": 2,
        "quote_count": 1
      }
    },
    {
      "id": "1975704598066413904",
      "text": "RT @Yangyixxxx: Lenny访谈了前谷歌、Spotify产品总监Nasin Shenal，聊到打磨产品细节与核心功能往往无法同时兼顾时，Nasin Shenal提到了应该去真正塑造产品愉悦感而非华而不实的五彩纸屑\n\n什么是愉悦感？…",
      "created_at": "Tue Oct 07 23:27:37 +0000 2025",
      "lang": "zh",
      "media": [],
      "retweet": {
        "id": "1975698655228404202",
        "text": "Lenny访谈了前谷歌、Spotify产品总监Nasin Shenal，聊到打磨产品细节与核心功能往往无法同时兼顾时，Nasin Shenal提到了应该去真正塑造产品愉悦感而非华而不实的五彩纸屑\n\n什么是愉悦感？\n\n很多人提到“愉悦感”，想到的就是那些华而不实的动画特效。比如，摇一摇手机，屏幕上飘下雪花。这些其实是为“五彩纸屑 (Confetti)”。而不是所谓的“愉悦感”。\n\n真正的“愉悦感”，是一种同时满足用户“功能需求”和“情感需求”的能力。\n最好的产品，能与用户建立深刻的情感连接。这，才是“愉悦感”的本质。\n\n以 Spotify 为例。市面上有大量的音乐流媒体App，但为什么用户对Spotify如此忠诚？\n因为像年度总结、心情推荐、每周发现这些功能，让用户感觉自己被看见、被倾听、甚至被连接。\n\n所以，请明确一点：在今天这个市场极度拥挤的时代，“愉悦感”不是奢侈品，它是一个强大的差异化战略。 它可以直接带来更高的忠诚度、更好的口碑、更快的增长，甚至是更高的收入。\n\n三个塑造愉悦感的有效方式：\n\n方式一：消除摩擦\n在用户体验中，总有一些时刻，用户的情绪会跌入谷底，充满焦虑和压力。你的任务，就是找到这些“情绪低谷”，然后用一个极其顺滑的解决方案，把他们拉上来。\n\nUber的退款案例：\n“我最近在巴黎打Uber去赶火车，结果司机无缘无故取消了订单，我急得要死。最后我被错误地扣了款，我正准备写一篇千字小作文去申诉。结果，我打开App，发现只需要点击两次，退款就到账了。在那个瞬间，我本应极度愤怒的情绪，被这个解决方案瞬间抚平。这种体验，就是一种深刻的‘愉悦感’。”\n\n让一件你预期会非常困难的事，变得出奇地简单——比如取消订阅、申请退款——这就是“消除摩擦”的力量。\n\n方式二：预判需求\n如果你总是等用户告诉你他们需要什么，那你只是在“满足”需求，而不是在创造“惊喜”。\n你需要把标准定得比用户自己还高。\n\nRevolut的eSIM卡案例：\n“我和家人去新加坡旅行，落地后才发现手机漫游费高得离谱。正当我丈夫焦头烂額时，他打开了他的银行App——Revolute，在一个标签页里，花7欧元，直接买好了eSIM卡。我当时就震惊了，一家银行App，为什么会内置一个卖eSIM卡的功能？后来才想明白，因为Revolut的用户大多是国际人士或外派人员，他们经常旅行。Revolut预判到了他们在海外的这个痛点，并提前给出了一个完美的解决方案。”\n在用户开口之前，就给他们想要的东西，这就是“预判需求”的魔力。\n\n方法三：超越预期 \n在你预判了需求之后，更进一步，就是给他们比他们想要的还多的东西。\n\n微软Edge浏览器的优惠券案例：\n我丈夫在用Edge浏览器买一台咖啡机，当他正要付款120欧元时，Edge突然弹出一个提示，自动为他找到了一个15%的折扣券。我根本就没想过去找优惠券，我已经准备好付全款了。这个功能，就完美地‘超越了预期’。\n\nDropbox有一个产品原则叫“纸杯蛋糕 (Cupcake)”。\nSnowflake 有一个概念叫“超级英雄 (Superhero)”。\n名字不同，但本质都是一样的：为客户带来喜悦。\n\n当我们在开发Google Meet时，我们不拿自己和Zoom或Teams比较，我们拿自己和“一次真实的线下会议”比较。在这种层面上对比，更容易寻找到超出预期的愉悦感。\n\n建立愉悦感文化\n- 从“动机”出发，重新理解你的用户： 除了“功能动机”（他们想用产品做什么），更要深挖“情感动机”（他们想感觉到什么？是安全感、归属感，还是成为更好的自己？）。\n- 用“50-40-10”法则来规划你的路线图：\n50% 的精力，用于“低愉悦”（纯功能性需求）。\n40% 的精力，用于“深层愉悦”（功能与情感的完美结合）。\n10% 的精力，用于“表层愉悦”（那些有趣的“五彩纸屑”）。\n- 建立“愉悦感”文化： 在Google，我们甚至有专门的“愉悦感PM”和团队。在Spotify，我们有定期的“Hack Days”，鼓励团队去探索那些能带来惊喜的功能。",
        "created_at": "Tue Oct 07 23:04:00 +0000 2025",
        "lang": "zh",
        "media": [],
        "retweet": null,
        "quoted": null,
        "user": {
          "id": "3122661542",
          "name": "Yangyi",
          "screen_name": "Yangyixxxx",
          "description": "Believing is seeing",
          "followers_count": 107201,
          "friends_count": 479,
          "verified": false,
          "is_blue_verified": true
        },
        "stats": {
          "retweet_count": 14,
          "favorite_count": 64,
          "reply_count": 5,
          "quote_count": 3
        }
      },
      "quoted": null,
      "stats": {
        "retweet_count": 14,
        "favorite_count": 0,
        "reply_count": 0,
        "quote_count": 0
      }
    }
  ]
}